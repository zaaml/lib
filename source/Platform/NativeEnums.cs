// <copyright file="NativeEnums.cs" author="Dmitry Kravchenin" email="d.kravchenin@zaaml.com">
//   Copyright (c) Zaaml. All rights reserved.
// </copyright>

using System;
using System.Runtime.InteropServices;

// ReSharper disable InconsistentNaming

namespace Zaaml.Platform
{
	public enum MonitorOptions : uint
	{
		MONITOR_DEFAULTTONULL = 0x00000000,
		MONITOR_DEFAULTTOPRIMARY = 0x00000001,
		MONITOR_DEFAULTTONEAREST = 0x00000002
	}

	[Flags]
	internal enum HCF
	{
		HIGHCONTRASTON = 0x00000001,
		AVAILABLE = 0x00000002,
		HOTKEYACTIVE = 0x00000004,
		CONFIRMHOTKEY = 0x00000008,
		HOTKEYSOUND = 0x00000010,
		INDICATOR = 0x00000020,
		HOTKEYAVAILABLE = 0x00000040,
	}

	internal enum WINDOWTHEMEATTRIBUTETYPE
	{
		WTA_NONCLIENT = 1
	}

	internal enum BI
	{
		RGB = 0,
	}


	internal enum RGN
	{
		AND = 1,
		OR = 2,
		XOR = 3,
		DIFF = 4,
		COPY = 5,
	}

	internal enum CombineRgnResult
	{
		ERROR = 0,
		NULLREGION = 1,
		SIMPLEREGION = 2,
		COMPLEXREGION = 3,
	}

	internal enum HT
	{
		ERROR = -2,
		TRANSPARENT = -1,
		NOWHERE = 0,
		CLIENT = 1,
		CAPTION = 2,
		SYSMENU = 3,
		GROWBOX = 4,
		SIZE = GROWBOX,
		MENU = 5,
		HSCROLL = 6,
		VSCROLL = 7,
		MINBUTTON = 8,
		MAXBUTTON = 9,
		LEFT = 10,
		RIGHT = 11,
		TOP = 12,
		TOPLEFT = 13,
		TOPRIGHT = 14,
		BOTTOM = 15,
		BOTTOMLEFT = 16,
		BOTTOMRIGHT = 17,
		BORDER = 18,
		REDUCE = MINBUTTON,
		ZOOM = MAXBUTTON,
		SIZEFIRST = LEFT,
		SIZELAST = BOTTOMRIGHT,
		OBJECT = 19,
		CLOSE = 20,
		HELP = 21
	}

	internal enum GWL : Int64
	{
		WNDPROC = -4,
		HINSTANCE = -6,
		HWNDPARENT = -8,
		STYLE = -16,
		EXSTYLE = -20,
		USERDATA = -21,
		ID = -12
	}

	internal enum SM
	{
		CXSCREEN = 0,
		CYSCREEN = 1,
		CXVSCROLL = 2,
		CYHSCROLL = 3,
		CYCAPTION = 4,
		CXBORDER = 5,
		CYBORDER = 6,
		CXFIXEDFRAME = 7,
		CYFIXEDFRAME = 8,
		CYVTHUMB = 9,
		CXHTHUMB = 10,
		CXICON = 11,
		CYICON = 12,
		CXCURSOR = 13,
		CYCURSOR = 14,
		CYMENU = 15,
		CXFULLSCREEN = 16,
		CYFULLSCREEN = 17,
		CYKANJIWINDOW = 18,
		MOUSEPRESENT = 19,
		CYVSCROLL = 20,
		CXHSCROLL = 21,
		DEBUG = 22,
		SWAPBUTTON = 23,
		CXMIN = 28,
		CYMIN = 29,
		CXSIZE = 30,
		CYSIZE = 31,
		CXFRAME = 32,
		CXSIZEFRAME = CXFRAME,
		CYFRAME = 33,
		CYSIZEFRAME = CYFRAME,
		CXMINTRACK = 34,
		CYMINTRACK = 35,
		CXDOUBLECLK = 36,
		CYDOUBLECLK = 37,
		CXICONSPACING = 38,
		CYICONSPACING = 39,
		MENUDROPALIGNMENT = 40,
		PENWINDOWS = 41,
		DBCSENABLED = 42,
		CMOUSEBUTTONS = 43,
		SECURE = 44,
		CXEDGE = 45,
		CYEDGE = 46,
		CXMINSPACING = 47,
		CYMINSPACING = 48,
		CXSMICON = 49,
		CYSMICON = 50,
		CYSMCAPTION = 51,
		CXSMSIZE = 52,
		CYSMSIZE = 53,
		CXMENUSIZE = 54,
		CYMENUSIZE = 55,
		ARRANGE = 56,
		CXMINIMIZED = 57,
		CYMINIMIZED = 58,
		CXMAXTRACK = 59,
		CYMAXTRACK = 60,
		CXMAXIMIZED = 61,
		CYMAXIMIZED = 62,
		NETWORK = 63,
		CLEANBOOT = 67,
		CXDRAG = 68,
		CYDRAG = 69,
		SHOWSOUNDS = 70,
		CXMENUCHECK = 71,
		CYMENUCHECK = 72,
		SLOWMACHINE = 73,
		MIDEASTENABLED = 74,
		MOUSEWHEELPRESENT = 75,
		XVIRTUALSCREEN = 76,
		YVIRTUALSCREEN = 77,
		CXVIRTUALSCREEN = 78,
		CYVIRTUALSCREEN = 79,
		CMONITORS = 80,
		SAMEDISPLAYFORMAT = 81,
		IMMENABLED = 82,
		CXFOCUSBORDER = 83,
		CYFOCUSBORDER = 84,
		TABLETPC = 86,
		MEDIACENTER = 87,
		REMOTESESSION = 0x1000,
		REMOTECONTROL = 0x2001,
	}

	internal enum SPI
	{
		GETBEEP = 0x0001,
		SETBEEP = 0x0002,
		GETMOUSE = 0x0003,
		SETMOUSE = 0x0004,
		GETBORDER = 0x0005,
		SETBORDER = 0x0006,
		GETKEYBOARDSPEED = 0x000A,
		SETKEYBOARDSPEED = 0x000B,
		LANGDRIVER = 0x000C,
		ICONHORIZONTALSPACING = 0x000D,
		GETSCREENSAVETIMEOUT = 0x000E,
		SETSCREENSAVETIMEOUT = 0x000F,
		GETSCREENSAVEACTIVE = 0x0010,
		SETSCREENSAVEACTIVE = 0x0011,
		GETGRIDGRANULARITY = 0x0012,
		SETGRIDGRANULARITY = 0x0013,
		SETDESKWALLPAPER = 0x0014,
		SETDESKPATTERN = 0x0015,
		GETKEYBOARDDELAY = 0x0016,
		SETKEYBOARDDELAY = 0x0017,
		ICONVERTICALSPACING = 0x0018,
		GETICONTITLEWRAP = 0x0019,
		SETICONTITLEWRAP = 0x001A,
		GETMENUDROPALIGNMENT = 0x001B,
		SETMENUDROPALIGNMENT = 0x001C,
		SETDOUBLECLKWIDTH = 0x001D,
		SETDOUBLECLKHEIGHT = 0x001E,
		GETICONTITLELOGFONT = 0x001F,
		SETDOUBLECLICKTIME = 0x0020,
		SETMOUSEBUTTONSWAP = 0x0021,
		SETICONTITLELOGFONT = 0x0022,
		GETFASTTASKSWITCH = 0x0023,
		SETFASTTASKSWITCH = 0x0024,

		SETDRAGFULLWINDOWS = 0x0025,
		GETDRAGFULLWINDOWS = 0x0026,
		GETNONCLIENTMETRICS = 0x0029,
		SETNONCLIENTMETRICS = 0x002A,
		GETMINIMIZEDMETRICS = 0x002B,
		SETMINIMIZEDMETRICS = 0x002C,
		GETICONMETRICS = 0x002D,
		SETICONMETRICS = 0x002E,
		SETWORKAREA = 0x002F,
		GETWORKAREA = 0x0030,
		SETPENWINDOWS = 0x0031,
		GETHIGHCONTRAST = 0x0042,
		SETHIGHCONTRAST = 0x0043,
		GETKEYBOARDPREF = 0x0044,
		SETKEYBOARDPREF = 0x0045,
		GETSCREENREADER = 0x0046,
		SETSCREENREADER = 0x0047,
		GETANIMATION = 0x0048,
		SETANIMATION = 0x0049,
		GETFONTSMOOTHING = 0x004A,
		SETFONTSMOOTHING = 0x004B,
		SETDRAGWIDTH = 0x004C,
		SETDRAGHEIGHT = 0x004D,
		SETHANDHELD = 0x004E,
		GETLOWPOWERTIMEOUT = 0x004F,
		GETPOWEROFFTIMEOUT = 0x0050,
		SETLOWPOWERTIMEOUT = 0x0051,
		SETPOWEROFFTIMEOUT = 0x0052,
		GETLOWPOWERACTIVE = 0x0053,
		GETPOWEROFFACTIVE = 0x0054,
		SETLOWPOWERACTIVE = 0x0055,
		SETPOWEROFFACTIVE = 0x0056,
		SETCURSORS = 0x0057,
		SETICONS = 0x0058,
		GETDEFAULTINPUTLANG = 0x0059,
		SETDEFAULTINPUTLANG = 0x005A,
		SETLANGTOGGLE = 0x005B,
		GETWINDOWSEXTENSION = 0x005C,
		SETMOUSETRAILS = 0x005D,
		GETMOUSETRAILS = 0x005E,
		SETSCREENSAVERRUNNING = 0x0061,
		SCREENSAVERRUNNING = SETSCREENSAVERRUNNING,
		GETFILTERKEYS = 0x0032,
		SETFILTERKEYS = 0x0033,
		GETTOGGLEKEYS = 0x0034,
		SETTOGGLEKEYS = 0x0035,
		GETMOUSEKEYS = 0x0036,
		SETMOUSEKEYS = 0x0037,
		GETSHOWSOUNDS = 0x0038,
		SETSHOWSOUNDS = 0x0039,
		GETSTICKYKEYS = 0x003A,
		SETSTICKYKEYS = 0x003B,
		GETACCESSTIMEOUT = 0x003C,
		SETACCESSTIMEOUT = 0x003D,

		GETSERIALKEYS = 0x003E,
		SETSERIALKEYS = 0x003F,
		GETSOUNDSENTRY = 0x0040,
		SETSOUNDSENTRY = 0x0041,
		GETSNAPTODEFBUTTON = 0x005F,
		SETSNAPTODEFBUTTON = 0x0060,
		GETMOUSEHOVERWIDTH = 0x0062,
		SETMOUSEHOVERWIDTH = 0x0063,
		GETMOUSEHOVERHEIGHT = 0x0064,
		SETMOUSEHOVERHEIGHT = 0x0065,
		GETMOUSEHOVERTIME = 0x0066,
		SETMOUSEHOVERTIME = 0x0067,
		GETWHEELSCROLLLINES = 0x0068,
		SETWHEELSCROLLLINES = 0x0069,
		GETMENUSHOWDELAY = 0x006A,
		SETMENUSHOWDELAY = 0x006B,

		GETWHEELSCROLLCHARS = 0x006C,
		SETWHEELSCROLLCHARS = 0x006D,

		GETSHOWIMEUI = 0x006E,
		SETSHOWIMEUI = 0x006F,

		GETMOUSESPEED = 0x0070,
		SETMOUSESPEED = 0x0071,
		GETSCREENSAVERRUNNING = 0x0072,
		GETDESKWALLPAPER = 0x0073,

		GETAUDIODESCRIPTION = 0x0074,
		SETAUDIODESCRIPTION = 0x0075,

		GETSCREENSAVESECURE = 0x0076,
		SETSCREENSAVESECURE = 0x0077,

		GETHUNGAPPTIMEOUT = 0x0078,
		SETHUNGAPPTIMEOUT = 0x0079,
		GETWAITTOKILLTIMEOUT = 0x007A,
		SETWAITTOKILLTIMEOUT = 0x007B,
		GETWAITTOKILLSERVICETIMEOUT = 0x007C,
		SETWAITTOKILLSERVICETIMEOUT = 0x007D,
		GETMOUSEDOCKTHRESHOLD = 0x007E,
		SETMOUSEDOCKTHRESHOLD = 0x007F,
		GETPENDOCKTHRESHOLD = 0x0080,
		SETPENDOCKTHRESHOLD = 0x0081,
		GETWINARRANGING = 0x0082,
		SETWINARRANGING = 0x0083,
		GETMOUSEDRAGOUTTHRESHOLD = 0x0084,
		SETMOUSEDRAGOUTTHRESHOLD = 0x0085,
		GETPENDRAGOUTTHRESHOLD = 0x0086,
		SETPENDRAGOUTTHRESHOLD = 0x0087,
		GETMOUSESIDEMOVETHRESHOLD = 0x0088,
		SETMOUSESIDEMOVETHRESHOLD = 0x0089,
		GETPENSIDEMOVETHRESHOLD = 0x008A,
		SETPENSIDEMOVETHRESHOLD = 0x008B,
		GETDRAGFROMMAXIMIZE = 0x008C,
		SETDRAGFROMMAXIMIZE = 0x008D,
		GETSNAPSIZING = 0x008E,
		SETSNAPSIZING = 0x008F,
		GETDOCKMOVING = 0x0090,
		SETDOCKMOVING = 0x0091,

		GETACTIVEWINDOWTRACKING = 0x1000,
		SETACTIVEWINDOWTRACKING = 0x1001,
		GETMENUANIMATION = 0x1002,
		SETMENUANIMATION = 0x1003,
		GETCOMBOBOXANIMATION = 0x1004,
		SETCOMBOBOXANIMATION = 0x1005,
		GETLISTBOXSMOOTHSCROLLING = 0x1006,
		SETLISTBOXSMOOTHSCROLLING = 0x1007,
		GETGRADIENTCAPTIONS = 0x1008,
		SETGRADIENTCAPTIONS = 0x1009,
		GETKEYBOARDCUES = 0x100A,
		SETKEYBOARDCUES = 0x100B,
		GETMENUUNDERLINES = GETKEYBOARDCUES,
		SETMENUUNDERLINES = SETKEYBOARDCUES,
		GETACTIVEWNDTRKZORDER = 0x100C,
		SETACTIVEWNDTRKZORDER = 0x100D,
		GETHOTTRACKING = 0x100E,
		SETHOTTRACKING = 0x100F,
		GETMENUFADE = 0x1012,
		SETMENUFADE = 0x1013,
		GETSELECTIONFADE = 0x1014,
		SETSELECTIONFADE = 0x1015,
		GETTOOLTIPANIMATION = 0x1016,
		SETTOOLTIPANIMATION = 0x1017,
		GETTOOLTIPFADE = 0x1018,
		SETTOOLTIPFADE = 0x1019,
		GETCURSORSHADOW = 0x101A,
		SETCURSORSHADOW = 0x101B,
		GETMOUSESONAR = 0x101C,
		SETMOUSESONAR = 0x101D,
		GETMOUSECLICKLOCK = 0x101E,
		SETMOUSECLICKLOCK = 0x101F,
		GETMOUSEVANISH = 0x1020,
		SETMOUSEVANISH = 0x1021,
		GETFLATMENU = 0x1022,
		SETFLATMENU = 0x1023,
		GETDROPSHADOW = 0x1024,
		SETDROPSHADOW = 0x1025,
		GETBLOCKSENDINPUTRESETS = 0x1026,
		SETBLOCKSENDINPUTRESETS = 0x1027,

		GETUIEFFECTS = 0x103E,
		SETUIEFFECTS = 0x103F,

		GETDISABLEOVERLAPPEDCONTENT = 0x1040,
		SETDISABLEOVERLAPPEDCONTENT = 0x1041,
		GETCLIENTAREAANIMATION = 0x1042,
		SETCLIENTAREAANIMATION = 0x1043,
		GETCLEARTYPE = 0x1048,
		SETCLEARTYPE = 0x1049,
		GETSPEECHRECOGNITION = 0x104A,
		SETSPEECHRECOGNITION = 0x104B,

		GETFOREGROUNDLOCKTIMEOUT = 0x2000,
		SETFOREGROUNDLOCKTIMEOUT = 0x2001,
		GETACTIVEWNDTRKTIMEOUT = 0x2002,
		SETACTIVEWNDTRKTIMEOUT = 0x2003,
		GETFOREGROUNDFLASHCOUNT = 0x2004,
		SETFOREGROUNDFLASHCOUNT = 0x2005,
		GETCARETWIDTH = 0x2006,
		SETCARETWIDTH = 0x2007,

		GETMOUSECLICKLOCKTIME = 0x2008,
		SETMOUSECLICKLOCKTIME = 0x2009,
		GETFONTSMOOTHINGTYPE = 0x200A,
		SETFONTSMOOTHINGTYPE = 0x200B,

		GETFONTSMOOTHINGCONTRAST = 0x200C,
		SETFONTSMOOTHINGCONTRAST = 0x200D,

		GETFOCUSBORDERWIDTH = 0x200E,
		SETFOCUSBORDERWIDTH = 0x200F,
		GETFOCUSBORDERHEIGHT = 0x2010,
		SETFOCUSBORDERHEIGHT = 0x2011,

		GETFONTSMOOTHINGORIENTATION = 0x2012,
		SETFONTSMOOTHINGORIENTATION = 0x2013,

		GETMINIMUMHITRADIUS = 0x2014,
		SETMINIMUMHITRADIUS = 0x2015,
		GETMESSAGEDURATION = 0x2016,
		SETMESSAGEDURATION = 0x2017,
	}


	internal enum TPM : uint
	{
		LEFTALIGN = 0x0000,
		CENTERALIGN = 0x0004,
		RIGHTALIGN = 0x0008,
		TOPALIGN = 0x0000,
		VCENTERALIGN = 0x0010,
		BOTTOMALIGN = 0x0020,
		HORIZONTAL = 0x0000,
		VERTICAL = 0x0040,
		RETURNCMD = 0x0100
	}

	[Flags]
	internal enum QS : uint
	{
		KEY = 0x0001,
		MOUSEMOVE = 0x0002,
		MOUSEBUTTON = 0x0004,
		POSTMESSAGE = 0x0008,
		TIMER = 0x0010,
		PAINT = 0x0020,
		SENDMESSAGE = 0x0040,
		HOTKEY = 0x0080,
		ALLPOSTMESSAGE = 0x0100,
		RAWINPUT = 0x0400,
		MOUSE = MOUSEMOVE | MOUSEBUTTON,
		INPUT = MOUSE | KEY | RAWINPUT,
		ALLEVENTS = INPUT | POSTMESSAGE | TIMER | PAINT | HOTKEY,
		ALLINPUT = INPUT | POSTMESSAGE | TIMER | PAINT | HOTKEY | SENDMESSAGE
	}

	[Flags]
	internal enum PM : uint
	{
		NOREMOVE = 0x0000,
		REMOVE = 0x0001,
		NOYIELD = 0x0002,
		INPUT = QS.INPUT << 16,
		POSTMESSAGE = (QS.POSTMESSAGE | QS.HOTKEY | QS.TIMER) << 16,
		PAINT = QS.PAINT << 16,
		SENDMESSAGE = QS.SENDMESSAGE << 16
	}

	[Flags]
	internal enum SPIF
	{
		NONE = 0,
		UPDATEINIFILE = 0x01,
		SENDCHANGE = 0x02,
		SENDWININICHANGE = SENDCHANGE,
	}

	[Flags]
	internal enum STATE_SYSTEM
	{
		UNAVAILABLE = 0x00000001, // Disabled
		SELECTED = 0x00000002,
		FOCUSED = 0x00000004,
		PRESSED = 0x00000008,
		CHECKED = 0x00000010,
		MIXED = 0x00000020, // 3-state checkbox or toolbar button
		INDETERMINATE = MIXED,
		READONLY = 0x00000040,
		HOTTRACKED = 0x00000080,
		DEFAULT = 0x00000100,
		EXPANDED = 0x00000200,
		COLLAPSED = 0x00000400,
		BUSY = 0x00000800,
		FLOATING = 0x00001000, // Children "owned" not "contained" by parent
		MARQUEED = 0x00002000,
		ANIMATED = 0x00004000,
		INVISIBLE = 0x00008000,
		OFFSCREEN = 0x00010000,
		SIZEABLE = 0x00020000,
		MOVEABLE = 0x00040000,
		SELFVOICING = 0x00080000,
		FOCUSABLE = 0x00100000,
		SELECTABLE = 0x00200000,
		LINKED = 0x00400000,
		TRAVERSED = 0x00800000,
		MULTISELECTABLE = 0x01000000, // Supports multiple selection
		EXTSELECTABLE = 0x02000000, // Supports extended selection
		ALERT_LOW = 0x04000000, // This information is of low priority
		ALERT_MEDIUM = 0x08000000, // This information is of medium priority
		ALERT_HIGH = 0x10000000, // This information is of high priority
		PROTECTED = 0x20000000, // access to this is restricted
		VALID = 0x3FFFFFFF,
	}

	internal enum StockObject
	{
		WHITE_BRUSH = 0,
		LTGRAY_BRUSH = 1,
		GRAY_BRUSH = 2,
		DKGRAY_BRUSH = 3,
		BLACK_BRUSH = 4,
		NULL_BRUSH = 5,
		HOLLOW_BRUSH = NULL_BRUSH,
		WHITE_PEN = 6,
		BLACK_PEN = 7,
		NULL_PEN = 8,
		SYSTEM_FONT = 13,
		DEFAULT_PALETTE = 15,
	}

	[Flags]
	internal enum CS : uint
	{
		VREDRAW = 0x0001,
		HREDRAW = 0x0002,
		DBLCLKS = 0x0008,
		OWNDC = 0x0020,
		CLASSDC = 0x0040,
		PARENTDC = 0x0080,
		NOCLOSE = 0x0200,
		SAVEBITS = 0x0800,
		BYTEALIGNCLIENT = 0x1000,
		BYTEALIGNWINDOW = 0x2000,
		GLOBALCLASS = 0x4000,
		IME = 0x00010000,
		DROPSHADOW = 0x00020000
	}

	[Flags]
	internal enum WS : uint
	{
		OVERLAPPED = 0x00000000,
		POPUP = 0x80000000,
		CHILD = 0x40000000,
		MINIMIZE = 0x20000000,
		VISIBLE = 0x10000000,
		DISABLED = 0x08000000,
		CLIPSIBLINGS = 0x04000000,
		CLIPCHILDREN = 0x02000000,
		MAXIMIZE = 0x01000000,
		BORDER = 0x00800000,
		DLGFRAME = 0x00400000,
		VSCROLL = 0x00200000,
		HSCROLL = 0x00100000,
		SYSMENU = 0x00080000,
		THICKFRAME = 0x00040000,
		GROUP = 0x00020000,
		TABSTOP = 0x00010000,

		MINIMIZEBOX = 0x00020000,
		MAXIMIZEBOX = 0x00010000,

		CAPTION = BORDER | DLGFRAME,
		TILED = OVERLAPPED,
		ICONIC = MINIMIZE,
		SIZEBOX = THICKFRAME,
		TILEDWINDOW = OVERLAPPEDWINDOW,

		OVERLAPPEDWINDOW = OVERLAPPED | CAPTION | SYSMENU | THICKFRAME | MINIMIZEBOX | MAXIMIZEBOX,
		POPUPWINDOW = POPUP | BORDER | SYSMENU,
		CHILDWINDOW = CHILD,
	}

	internal enum DwmWindowAttribute : uint
	{
		NCRenderingEnabled = 1,
		NCRenderingPolicy,
		TransitionsForceDisabled,
		AllowNCPaint,
		CaptionButtonBounds,
		NonClientRtlLayout,
		ForceIconicRepresentation,
		Flip3DPolicy,
		ExtendedFrameBounds,
		HasIconicBitmap,
		DisallowPeek,
		ExcludedFromPeek,
		Cloak,
		Cloaked,
		FreezeRepresentation
	}

	[Flags]
	internal enum DWMNCRenderingPolicy : uint
	{
		UseWindowStyle,
		Disabled,
		Enabled,
		Last
	}

	[StructLayout(LayoutKind.Sequential)]
	internal struct APPBARDATA
	{
		public int cbSize;
		public IntPtr hWnd;
		public uint uCallbackMessage;
		public uint uEdge;
		public RECT rc;
		public IntPtr lParam;
	}

	internal enum ABMsg
	{
		ABM_NEW = 0,
		ABM_REMOVE,
		ABM_QUERYPOS,
		ABM_SETPOS,
		ABM_GETSTATE,
		ABM_GETTASKBARPOS,
		ABM_ACTIVATE,
		ABM_GETAUTOHIDEBAR,
		ABM_SETAUTOHIDEBAR,
		ABM_WINDOWPOSCHANGED,
		ABM_SETSTATE
	}

	internal enum ABEdge
	{
		ABE_LEFT = 0,
		ABE_TOP,
		ABE_RIGHT,
		ABE_BOTTOM
	}

	internal enum MOUSEEVENT : uint
	{
		LEFTDOWN = 0x00000002,
		LEFTUP = 0x00000004,
		MIDDLEDOWN = 0x00000020,
		MIDDLEUP = 0x00000040,
		MOVE = 0x00000001,
		ABSOLUTE = 0x00008000,
		RIGHTDOWN = 0x00000008,
		RIGHTUP = 0x00000010,
		WHEEL = 0x00000800,
		XDOWN = 0x00000080,
		XUP = 0x00000100
	}

	public enum MouseEventDataXButtons : uint
	{
		XBUTTON1 = 0x00000001,
		XBUTTON2 = 0x00000002
	}

	internal enum WM : uint
	{
		NULL = 0x0000,
		CREATE = 0x0001,
		DESTROY = 0x0002,
		MOVE = 0x0003,
		SIZE = 0x0005,
		ACTIVATE = 0x0006,
		SETFOCUS = 0x0007,
		KILLFOCUS = 0x0008,
		ENABLE = 0x000A,
		SETREDRAW = 0x000B,
		SETTEXT = 0x000C,
		GETTEXT = 0x000D,
		GETTEXTLENGTH = 0x000E,
		PAINT = 0x000F,
		CLOSE = 0x0010,
		QUERYENDSESSION = 0x0011,
		QUERYOPEN = 0x0013,
		ENDSESSION = 0x0016,
		QUIT = 0x0012,
		ERASEBKGND = 0x0014,
		SYSCOLORCHANGE = 0x0015,
		SHOWWINDOW = 0x0018,
		WININICHANGE = 0x001A,
		SETTINGCHANGE = WININICHANGE,
		DEVMODECHANGE = 0x001B,
		ACTIVATEAPP = 0x001C,
		FONTCHANGE = 0x001D,
		TIMECHANGE = 0x001E,
		CANCELMODE = 0x001F,

		// Undocumented
		NCUAHDRAWCAPTION = 0x00AE,
		NCUAHDRAWFRAME = 0x00AF,

		SETCURSOR = 0x0020,
		MOUSEACTIVATE = 0x0021,
		CHILDACTIVATE = 0x0022,
		QUEUESYNC = 0x0023,
		GETMINMAXINFO = 0x0024,
		PAINTICON = 0x0026,
		ICONERASEBKGND = 0x0027,
		NEXTDLGCTL = 0x0028,
		SPOOLERSTATUS = 0x002A,
		DRAWITEM = 0x002B,
		MEASUREITEM = 0x002C,
		DELETEITEM = 0x002D,
		VKEYTOITEM = 0x002E,
		CHARTOITEM = 0x002F,
		SETFONT = 0x0030,
		GETFONT = 0x0031,
		SETHOTKEY = 0x0032,
		GETHOTKEY = 0x0033,
		QUERYDRAGICON = 0x0037,
		COMPAREITEM = 0x0039,
		GETOBJECT = 0x003D,
		COMPACTING = 0x0041,
		COMMNOTIFY = 0x0044,
		WINDOWPOSCHANGING = 0x0046,
		WINDOWPOSCHANGED = 0x0047,
		POWER = 0x0048,
		COPYDATA = 0x004A,
		CANCELJOURNAL = 0x004B,
		NOTIFY = 0x004E,
		INPUTLANGCHANGEREQUEST = 0x0050,
		INPUTLANGCHANGE = 0x0051,
		TCARD = 0x0052,
		HELP = 0x0053,
		USERCHANGED = 0x0054,
		NOTIFYFORMAT = 0x0055,
		CONTEXTMENU = 0x007B,
		STYLECHANGING = 0x007C,
		STYLECHANGED = 0x007D,
		DISPLAYCHANGE = 0x007E,
		GETICON = 0x007F,
		SETICON = 0x0080,
		NCCREATE = 0x0081,
		NCDESTROY = 0x0082,
		NCCALCSIZE = 0x0083,
		NCHITTEST = 0x0084,
		NCPAINT = 0x0085,
		NCACTIVATE = 0x0086,
		GETDLGCODE = 0x0087,
		SYNCPAINT = 0x0088,


		NCMOUSEMOVE = 0x00A0,
		NCLBUTTONDOWN = 0x00A1,
		NCLBUTTONUP = 0x00A2,
		NCLBUTTONDBLCLK = 0x00A3,
		NCRBUTTONDOWN = 0x00A4,
		NCRBUTTONUP = 0x00A5,
		NCRBUTTONDBLCLK = 0x00A6,
		NCMBUTTONDOWN = 0x00A7,
		NCMBUTTONUP = 0x00A8,
		NCMBUTTONDBLCLK = 0x00A9,
		NCXBUTTONDOWN = 0x00AB,
		NCXBUTTONUP = 0x00AC,
		NCXBUTTONDBLCLK = 0x00AD,

		INPUT_DEVICE_CHANGE = 0x00FE,
		INPUT = 0x00FF,

		KEYFIRST = 0x0100,
		KEYDOWN = 0x0100,
		KEYUP = 0x0101,
		CHAR = 0x0102,
		DEADCHAR = 0x0103,
		SYSKEYDOWN = 0x0104,
		SYSKEYUP = 0x0105,
		SYSCHAR = 0x0106,
		SYSDEADCHAR = 0x0107,
		UNICHAR = 0x0109,
		KEYLAST = 0x0109,

		IME_STARTCOMPOSITION = 0x010D,
		IME_ENDCOMPOSITION = 0x010E,
		IME_COMPOSITION = 0x010F,
		IME_KEYLAST = 0x010F,

		INITDIALOG = 0x0110,
		COMMAND = 0x0111,
		SYSCOMMAND = 0x0112,
		TIMER = 0x0113,
		HSCROLL = 0x0114,
		VSCROLL = 0x0115,
		INITMENU = 0x0116,
		INITMENUPOPUP = 0x0117,
		MENUSELECT = 0x011F,
		MENUCHAR = 0x0120,
		ENTERIDLE = 0x0121,
		MENURBUTTONUP = 0x0122,
		MENUDRAG = 0x0123,
		MENUGETOBJECT = 0x0124,
		UNINITMENUPOPUP = 0x0125,
		MENUCOMMAND = 0x0126,

		CHANGEUISTATE = 0x0127,
		UPDATEUISTATE = 0x0128,
		QUERYUISTATE = 0x0129,

		CTLCOLORMSGBOX = 0x0132,
		CTLCOLOREDIT = 0x0133,
		CTLCOLORLISTBOX = 0x0134,
		CTLCOLORBTN = 0x0135,
		CTLCOLORDLG = 0x0136,
		CTLCOLORSCROLLBAR = 0x0137,
		CTLCOLORSTATIC = 0x0138,
		MN_GETHMENU = 0x01E1,

		MOUSEFIRST = 0x0200,
		MOUSEMOVE = 0x0200,
		LBUTTONDOWN = 0x0201,
		LBUTTONUP = 0x0202,
		LBUTTONDBLCLK = 0x0203,
		RBUTTONDOWN = 0x0204,
		RBUTTONUP = 0x0205,
		RBUTTONDBLCLK = 0x0206,
		MBUTTONDOWN = 0x0207,
		MBUTTONUP = 0x0208,
		MBUTTONDBLCLK = 0x0209,
		MOUSEWHEEL = 0x020A,
		XBUTTONDOWN = 0x020B,
		XBUTTONUP = 0x020C,
		XBUTTONDBLCLK = 0x020D,
		MOUSEHWHEEL = 0x020E,

		PARENTNOTIFY = 0x0210,
		ENTERMENULOOP = 0x0211,
		EXITMENULOOP = 0x0212,

		NEXTMENU = 0x0213,
		SIZING = 0x0214,
		CAPTURECHANGED = 0x0215,
		MOVING = 0x0216,

		POWERBROADCAST = 0x0218,

		DEVICECHANGE = 0x0219,

		MDICREATE = 0x0220,
		MDIDESTROY = 0x0221,
		MDIACTIVATE = 0x0222,
		MDIRESTORE = 0x0223,
		MDINEXT = 0x0224,
		MDIMAXIMIZE = 0x0225,
		MDITILE = 0x0226,
		MDICASCADE = 0x0227,
		MDIICONARRANGE = 0x0228,
		MDIGETACTIVE = 0x0229,


		MDISETMENU = 0x0230,
		ENTERSIZEMOVE = 0x0231,
		EXITSIZEMOVE = 0x0232,
		DROPFILES = 0x0233,
		MDIREFRESHMENU = 0x0234,

		IME_SETCONTEXT = 0x0281,
		IME_NOTIFY = 0x0282,
		IME_CONTROL = 0x0283,
		IME_COMPOSITIONFULL = 0x0284,
		IME_SELECT = 0x0285,
		IME_CHAR = 0x0286,
		IME_REQUEST = 0x0288,
		IME_KEYDOWN = 0x0290,
		IME_KEYUP = 0x0291,

		MOUSEHOVER = 0x02A1,
		MOUSELEAVE = 0x02A3,
		NCMOUSEHOVER = 0x02A0,
		NCMOUSELEAVE = 0x02A2,

		WTSSESSION_CHANGE = 0x02B1,

		TABLET_FIRST = 0x02c0,
		TABLET_LAST = 0x02df,

		DPICHANGED = 0x02E0,

		CUT = 0x0300,
		COPY = 0x0301,
		PASTE = 0x0302,
		CLEAR = 0x0303,
		UNDO = 0x0304,
		RENDERFORMAT = 0x0305,
		RENDERALLFORMATS = 0x0306,
		DESTROYCLIPBOARD = 0x0307,
		DRAWCLIPBOARD = 0x0308,
		PAINTCLIPBOARD = 0x0309,
		VSCROLLCLIPBOARD = 0x030A,
		SIZECLIPBOARD = 0x030B,
		ASKCBFORMATNAME = 0x030C,
		CHANGECBCHAIN = 0x030D,
		HSCROLLCLIPBOARD = 0x030E,
		QUERYNEWPALETTE = 0x030F,
		PALETTEISCHANGING = 0x0310,
		PALETTECHANGED = 0x0311,
		HOTKEY = 0x0312,

		PRINT = 0x0317,
		PRINTCLIENT = 0x0318,

		APPCOMMAND = 0x0319,

		THEMECHANGED = 0x031A,

		CLIPBOARDUPDATE = 0x031D,

		DWMCOMPOSITIONCHANGED = 0x031E,
		DWMNCRENDERINGCHANGED = 0x031F,
		DWMCOLORIZATIONCOLORCHANGED = 0x0320,
		DWMWINDOWMAXIMIZEDCHANGE = 0x0321,

		GETTITLEBARINFOEX = 0x033F,

		HANDHELDFIRST = 0x0358,
		HANDHELDLAST = 0x035F,

		AFXFIRST = 0x0360,
		AFXLAST = 0x037F,

		PENWINFIRST = 0x0380,
		PENWINLAST = 0x038F,

		APP = 0x8000,

		USER = 0x0400,

		REFLECT = USER + 0x1C00,
	}

	[Flags]
	internal enum WS_EX : uint
	{
		None = 0,
		DLGMODALFRAME = 0x00000001,
		NOPARENTNOTIFY = 0x00000004,
		TOPMOST = 0x00000008,
		ACCEPTFILES = 0x00000010,
		TRANSPARENT = 0x00000020,
		MDICHILD = 0x00000040,
		TOOLWINDOW = 0x00000080,
		WINDOWEDGE = 0x00000100,
		CLIENTEDGE = 0x00000200,
		CONTEXTHELP = 0x00000400,
		RIGHT = 0x00001000,
		LEFT = 0x00000000,
		RTLREADING = 0x00002000,
		LTRREADING = 0x00000000,
		LEFTSCROLLBAR = 0x00004000,
		RIGHTSCROLLBAR = 0x00000000,
		CONTROLPARENT = 0x00010000,
		STATICEDGE = 0x00020000,
		APPWINDOW = 0x00040000,
		LAYERED = 0x00080000,
		NOINHERITLAYOUT = 0x00100000, // Disable inheritence of mirroring by children
		LAYOUTRTL = 0x00400000, // Right to left mirroring
		COMPOSITED = 0x02000000,
		NOACTIVATE = 0x08000000,
		OVERLAPPEDWINDOW = (WINDOWEDGE | CLIENTEDGE),
		PALETTEWINDOW = (WINDOWEDGE | TOOLWINDOW | TOPMOST),
	}

	public enum DeviceCap : int
	{
		/// <summary>
		///   Device driver version
		/// </summary>
		DRIVERVERSION = 0,

		/// <summary>
		///   Device classification
		/// </summary>
		TECHNOLOGY = 2,

		/// <summary>
		///   Horizontal size in millimeters
		/// </summary>
		HORZSIZE = 4,

		/// <summary>
		///   Vertical size in millimeters
		/// </summary>
		VERTSIZE = 6,

		/// <summary>
		///   Horizontal width in pixels
		/// </summary>
		HORZRES = 8,

		/// <summary>
		///   Vertical height in pixels
		/// </summary>
		VERTRES = 10,

		/// <summary>
		///   Number of bits per pixel
		/// </summary>
		BITSPIXEL = 12,

		/// <summary>
		///   Number of planes
		/// </summary>
		PLANES = 14,

		/// <summary>
		///   Number of brushes the device has
		/// </summary>
		NUMBRUSHES = 16,

		/// <summary>
		///   Number of pens the device has
		/// </summary>
		NUMPENS = 18,

		/// <summary>
		///   Number of markers the device has
		/// </summary>
		NUMMARKERS = 20,

		/// <summary>
		///   Number of fonts the device has
		/// </summary>
		NUMFONTS = 22,

		/// <summary>
		///   Number of colors the device supports
		/// </summary>
		NUMCOLORS = 24,

		/// <summary>
		///   Size required for device descriptor
		/// </summary>
		PDEVICESIZE = 26,

		/// <summary>
		///   Curve capabilities
		/// </summary>
		CURVECAPS = 28,

		/// <summary>
		///   Line capabilities
		/// </summary>
		LINECAPS = 30,

		/// <summary>
		///   Polygonal capabilities
		/// </summary>
		POLYGONALCAPS = 32,

		/// <summary>
		///   Text capabilities
		/// </summary>
		TEXTCAPS = 34,

		/// <summary>
		///   Clipping capabilities
		/// </summary>
		CLIPCAPS = 36,

		/// <summary>
		///   Bitblt capabilities
		/// </summary>
		RASTERCAPS = 38,

		/// <summary>
		///   Length of the X leg
		/// </summary>
		ASPECTX = 40,

		/// <summary>
		///   Length of the Y leg
		/// </summary>
		ASPECTY = 42,

		/// <summary>
		///   Length of the hypotenuse
		/// </summary>
		ASPECTXY = 44,

		/// <summary>
		///   Shading and Blending caps
		/// </summary>
		SHADEBLENDCAPS = 45,

		/// <summary>
		///   Logical pixels inch in X
		/// </summary>
		LOGPIXELSX = 88,

		/// <summary>
		///   Logical pixels inch in Y
		/// </summary>
		LOGPIXELSY = 90,

		/// <summary>
		///   Number of entries in physical palette
		/// </summary>
		SIZEPALETTE = 104,

		/// <summary>
		///   Number of reserved entries in palette
		/// </summary>
		NUMRESERVED = 106,

		/// <summary>
		///   Actual color resolution
		/// </summary>
		COLORRES = 108,

		// Printing related DeviceCaps. These replace the appropriate Escapes
		/// <summary>
		///   Physical Width in device units
		/// </summary>
		PHYSICALWIDTH = 110,

		/// <summary>
		///   Physical Height in device units
		/// </summary>
		PHYSICALHEIGHT = 111,

		/// <summary>
		///   Physical Printable Area x margin
		/// </summary>
		PHYSICALOFFSETX = 112,

		/// <summary>
		///   Physical Printable Area y margin
		/// </summary>
		PHYSICALOFFSETY = 113,

		/// <summary>
		///   Scaling factor x
		/// </summary>
		SCALINGFACTORX = 114,

		/// <summary>
		///   Scaling factor y
		/// </summary>
		SCALINGFACTORY = 115,

		/// <summary>
		///   Current vertical refresh rate of the display device (for displays only) in Hz
		/// </summary>
		VREFRESH = 116,

		/// <summary>
		///   Vertical height of entire desktop in pixels
		/// </summary>
		DESKTOPVERTRES = 117,

		/// <summary>
		///   Horizontal width of entire desktop in pixels
		/// </summary>
		DESKTOPHORZRES = 118,

		/// <summary>
		///   Preferred blt alignment
		/// </summary>
		BLTALIGNMENT = 119
	}

	internal enum FO
	{
		MOVE = 0x0001,
		COPY = 0x0002,
		DELETE = 0x0003,
		RENAME = 0x0004,
	}

	internal enum FOF : ushort
	{
		MULTIDESTFILES = 0x0001,
		CONFIRMMOUSE = 0x0002,
		SILENT = 0x0004,
		RENAMEONCOLLISION = 0x0008,
		NOCONFIRMATION = 0x0010,
		WANTMAPPINGHANDLE = 0x0020,
		ALLOWUNDO = 0x0040,
		FILESONLY = 0x0080,
		SIMPLEPROGRESS = 0x0100,
		NOCONFIRMMKDIR = 0x0200,
		NOERRORUI = 0x0400,
		NOCOPYSECURITYATTRIBS = 0x0800,
		NORECURSION = 0x1000,
		NO_CONNECTED_ELEMENTS = 0x2000,
		WANTNUKEWARNING = 0x4000,
		NORECURSEREPARSE = 0x8000,
	}

	[Flags]
	internal enum MF : uint
	{
		DOES_NOT_EXIST = unchecked((uint) -1),
		ENABLED = 0,
		BYCOMMAND = 0,
		GRAYED = 1,
		DISABLED = 2,
	}

	internal enum DWMFLIP3D
	{
		DEFAULT,
		EXCLUDEBELOW,
		EXCLUDEABOVE,
	}

	internal enum DWMNCRP
	{
		USEWINDOWSTYLE,
		DISABLED,
		ENABLED,
	}

	internal enum DWMWA
	{
		NCRENDERING_ENABLED = 1,
		NCRENDERING_POLICY,
		TRANSITIONS_FORCEDISABLED,
		ALLOW_NCPAINT,
		CAPTION_BUTTON_BOUNDS,
		NONCLIENT_RTL_LAYOUT,
		FORCE_ICONIC_REPRESENTATION,
		FLIP3D_POLICY,
		EXTENDED_FRAME_BOUNDS,
		HAS_ICONIC_BITMAP,
		DISALLOW_PEEK,
		EXCLUDED_FROM_PEEK,
	}

	[Flags]
	internal enum WTNCA : uint
	{
		NODRAWCAPTION = 0x00000001,
		NODRAWICON = 0x00000002,
		NOSYSMENU = 0x00000004,
		NOMIRRORHELP = 0x00000008,
		VALIDBITS = NODRAWCAPTION | NODRAWICON | NOMIRRORHELP | NOSYSMENU,
	}

	[Flags]
	internal enum SWP
	{
		ASYNCWINDOWPOS = 16384,
		DEFERERASE = 8192,
		DRAWFRAME = 32,
		FRAMECHANGED = DRAWFRAME,
		HIDEWINDOW = 128,
		NOACTIVATE = 16,
		NOCOPYBITS = 256,
		NOMOVE = 2,
		NOOWNERZORDER = 512,
		NOREDRAW = 8,
		NOREPOSITION = NOOWNERZORDER,
		NOSENDCHANGING = 1024,
		NOSIZE = 1,
		NOZORDER = 4,
		SHOWWINDOW = 64,
	}

	internal enum SW
	{
		HIDE = 0,
		SHOWNORMAL = 1,
		NORMAL = 1,
		SHOWMINIMIZED = 2,
		SHOWMAXIMIZED = 3,
		MAXIMIZE = 3,
		SHOWNOACTIVATE = 4,
		SHOW = 5,
		MINIMIZE = 6,
		SHOWMINNOACTIVE = 7,
		SHOWNA = 8,
		RESTORE = 9,
		SHOWDEFAULT = 10,
		FORCEMINIMIZE = 11,
	}

	internal enum SC
	{
		SIZE = 0xF000,
		MOVE = 0xF010,
		MOUSEMOVE = 0xF012,
		MINIMIZE = 0xF020,
		MAXIMIZE = 0xF030,
		NEXTWINDOW = 0xF040,
		PREVWINDOW = 0xF050,
		CLOSE = 0xF060,
		VSCROLL = 0xF070,
		HSCROLL = 0xF080,
		MOUSEMENU = 0xF090,
		KEYMENU = 0xF100,
		ARRANGE = 0xF110,
		RESTORE = 0xF120,
		TASKLIST = 0xF130,
		SCREENSAVE = 0xF140,
		HOTKEY = 0xF150,
		DEFAULT = 0xF160,
		MONITORPOWER = 0xF170,
		CONTEXTHELP = 0xF180,
		SEPARATOR = 0xF00F,
		F_ISSECURE = 0x00000001,
		ICON = MINIMIZE,
		ZOOM = MAXIMIZE,
	}

	internal enum Status
	{
		Ok = 0,
		GenericError = 1,
		InvalidParameter = 2,
		OutOfMemory = 3,
		ObjectBusy = 4,
		InsufficientBuffer = 5,
		NotImplemented = 6,
		Win32Error = 7,
		WrongState = 8,
		Aborted = 9,
		FileNotFound = 10,
		ValueOverflow = 11,
		AccessDenied = 12,
		UnknownImageFormat = 13,
		FontFamilyNotFound = 14,
		FontStyleNotFound = 15,
		NotTrueTypeFont = 16,
		UnsupportedGdiplusVersion = 17,
		GdiplusNotInitialized = 18,
		PropertyNotFound = 19,
		PropertyNotSupported = 20,
		ProfileNotFound = 21,
	}

	internal enum MOUSEEVENTF
	{
		LEFTDOWN = 2,
		LEFTUP = 4
	}

	internal enum MSGFLT
	{
		// Win7 versions of this enum:
		RESET = 0,
		ALLOW = 1,
		DISALLOW = 2,

		// Vista versions of this enum:
		// ADD = 1,
		// REMOVE = 2,
	}

	internal enum MSGFLTINFO
	{
		NONE = 0,
		ALREADYALLOWED_FORWND = 1,
		ALREADYDISALLOWED_FORWND = 2,
		ALLOWED_HIGHER = 3,
	}

	internal enum INPUT_TYPE : uint
	{
		MOUSE = 0,
	}

	internal enum NIM : uint
	{
		ADD = 0,
		MODIFY = 1,
		DELETE = 2,
		SETFOCUS = 3,
		SETVERSION = 4,
	}

	[Flags]
	internal enum NIF : uint
	{
		MESSAGE = 0x0001,
		ICON = 0x0002,
		TIP = 0x0004,
		STATE = 0x0008,
		INFO = 0x0010,
		GUID = 0x0020,

		/// <summary>
		///   Vista only.
		/// </summary>
		REALTIME = 0x0040,

		/// <summary>
		///   Vista only.
		/// </summary>
		SHOWTIP = 0x0080,

		XP_MASK = MESSAGE | ICON | STATE | INFO | GUID,
		VISTA_MASK = XP_MASK | REALTIME | SHOWTIP,
	}

	internal enum NIIF
	{
		NONE = 0x00000000,
		INFO = 0x00000001,
		WARNING = 0x00000002,
		ERROR = 0x00000003,

		/// <summary>XP SP2 and later.</summary>
		USER = 0x00000004,

		/// <summary>XP and later.</summary>
		NOSOUND = 0x00000010,

		/// <summary>Vista and later.</summary>
		LARGE_ICON = 0x00000020,

		/// <summary>Windows 7 and later</summary>
		NIIF_RESPECT_QUIET_TIME = 0x00000080,

		/// <summary>XP and later.  Native version called NIIF_ICON_MASK.</summary>
		XP_ICON_MASK = 0x0000000F,
	}

	internal enum AC : byte
	{
		SRC_OVER = 0,
		SRC_ALPHA = 1,
	}

	[Flags]
	internal enum WVR
	{
		ALIGNTOP = 0x0010,
		ALIGNLEFT = 0x0020,
		ALIGNBOTTOM = 0x0040,
		ALIGNRIGHT = 0x0080,
		HREDRAW = 0x0100,
		VREDRAW = 0x0200,
		VALIDRECTS = 0x0400,
		REDRAW = HREDRAW | VREDRAW,
	}

	internal enum GetWindowCommand : uint
	{
		HwndFirst = 0,
		HwndLast = 1,
		HwndNext = 2,
		HwndPrev = 3,
		Owner = 4,
		Child = 5,
		EnabledPopup = 6
	}

	[Flags]
	internal enum RedrawWindowFlags : uint
	{
		Invalidate = 0x1,
		InternalPaint = 0x2,
		Erase = 0x4,
		Validate = 0x8,
		NoInternalPaint = 0x10,
		NoErase = 0x20,
		NoChildren = 0x40,
		AllChildren = 0x80,
		UpdateNow = 0x100,
		EraseNow = 0x200,
		Frame = 0x400,
		NoFrame = 0x800
	}

	internal enum GetAncestorFlags
	{
		GetParent = 1,
		GetRoot = 2,
		GetRootOwner = 3
	}

	[Flags]
	internal enum DeviceContextValues : uint
	{
		Window = 0x00000001,
		Cache = 0x00000002,
		NoResetAttrs = 0x00000004,
		ClipChildren = 0x00000008,
		ClipSiblings = 0x00000010,
		ParentClip = 0x00000020,
		ExcludeRgn = 0x00000040,
		IntersectRgn = 0x00000080,
		ExcludeUpdate = 0x00000100,
		IntersectUpdate = 0x00000200,
		LockWindowUpdate = 0x00000400,
		UseStyle = 0x00010000,
		Validate = 0x00200000,
	}

	internal enum ClassLongFlags
	{
		GCLP_MENUNAME = -8,
		GCLP_HBRBACKGROUND = -10,
		GCLP_HCURSOR = -12,
		GCLP_HICON = -14,
		GCLP_HMODULE = -16,
		GCL_CBWNDEXTRA = -18,
		GCL_CBCLSEXTRA = -20,
		GCLP_WNDPROC = -24,
		GCL_STYLE = -26,
		GCLP_HICONSM = -34,
		GCW_ATOM = -32
	}

	internal enum VirtualKeyStates
	{
		VK_LBUTTON = 0x01,
		VK_RBUTTON = 0x02,
		VK_CANCEL = 0x03,
		VK_MBUTTON = 0x04,

		//
		VK_XBUTTON1 = 0x05,
		VK_XBUTTON2 = 0x06,

		//
		VK_BACK = 0x08,
		VK_TAB = 0x09,

		//
		VK_CLEAR = 0x0C,
		VK_RETURN = 0x0D,

		//
		VK_SHIFT = 0x10,
		VK_CONTROL = 0x11,
		VK_MENU = 0x12,
		VK_PAUSE = 0x13,
		VK_CAPITAL = 0x14,

		//
		VK_KANA = 0x15,
		VK_HANGEUL = 0x15, /* old name - should be here for compatibility */
		VK_HANGUL = 0x15,
		VK_JUNJA = 0x17,
		VK_FINAL = 0x18,
		VK_HANJA = 0x19,
		VK_KANJI = 0x19,

		//
		VK_ESCAPE = 0x1B,

		//
		VK_CONVERT = 0x1C,
		VK_NONCONVERT = 0x1D,
		VK_ACCEPT = 0x1E,
		VK_MODECHANGE = 0x1F,

		//
		VK_SPACE = 0x20,
		VK_PRIOR = 0x21,
		VK_NEXT = 0x22,
		VK_END = 0x23,
		VK_HOME = 0x24,
		VK_LEFT = 0x25,
		VK_UP = 0x26,
		VK_RIGHT = 0x27,
		VK_DOWN = 0x28,
		VK_SELECT = 0x29,
		VK_PRINT = 0x2A,
		VK_EXECUTE = 0x2B,
		VK_SNAPSHOT = 0x2C,
		VK_INSERT = 0x2D,
		VK_DELETE = 0x2E,
		VK_HELP = 0x2F,

		//
		VK_LWIN = 0x5B,
		VK_RWIN = 0x5C,
		VK_APPS = 0x5D,

		//
		VK_SLEEP = 0x5F,

		//
		VK_NUMPAD0 = 0x60,
		VK_NUMPAD1 = 0x61,
		VK_NUMPAD2 = 0x62,
		VK_NUMPAD3 = 0x63,
		VK_NUMPAD4 = 0x64,
		VK_NUMPAD5 = 0x65,
		VK_NUMPAD6 = 0x66,
		VK_NUMPAD7 = 0x67,
		VK_NUMPAD8 = 0x68,
		VK_NUMPAD9 = 0x69,
		VK_MULTIPLY = 0x6A,
		VK_ADD = 0x6B,
		VK_SEPARATOR = 0x6C,
		VK_SUBTRACT = 0x6D,
		VK_DECIMAL = 0x6E,
		VK_DIVIDE = 0x6F,
		VK_F1 = 0x70,
		VK_F2 = 0x71,
		VK_F3 = 0x72,
		VK_F4 = 0x73,
		VK_F5 = 0x74,
		VK_F6 = 0x75,
		VK_F7 = 0x76,
		VK_F8 = 0x77,
		VK_F9 = 0x78,
		VK_F10 = 0x79,
		VK_F11 = 0x7A,
		VK_F12 = 0x7B,
		VK_F13 = 0x7C,
		VK_F14 = 0x7D,
		VK_F15 = 0x7E,
		VK_F16 = 0x7F,
		VK_F17 = 0x80,
		VK_F18 = 0x81,
		VK_F19 = 0x82,
		VK_F20 = 0x83,
		VK_F21 = 0x84,
		VK_F22 = 0x85,
		VK_F23 = 0x86,
		VK_F24 = 0x87,

		//
		VK_NUMLOCK = 0x90,
		VK_SCROLL = 0x91,

		//
		VK_OEM_NEC_EQUAL = 0x92, // '=' key on numpad

		//
		VK_OEM_FJ_JISHO = 0x92, // 'Dictionary' key
		VK_OEM_FJ_MASSHOU = 0x93, // 'Unregister word' key
		VK_OEM_FJ_TOUROKU = 0x94, // 'Register word' key
		VK_OEM_FJ_LOYA = 0x95, // 'Left OYAYUBI' key
		VK_OEM_FJ_ROYA = 0x96, // 'Right OYAYUBI' key

		//
		VK_LSHIFT = 0xA0,
		VK_RSHIFT = 0xA1,
		VK_LCONTROL = 0xA2,
		VK_RCONTROL = 0xA3,
		VK_LMENU = 0xA4,
		VK_RMENU = 0xA5,

		//
		VK_BROWSER_BACK = 0xA6,
		VK_BROWSER_FORWARD = 0xA7,
		VK_BROWSER_REFRESH = 0xA8,
		VK_BROWSER_STOP = 0xA9,
		VK_BROWSER_SEARCH = 0xAA,
		VK_BROWSER_FAVORITES = 0xAB,
		VK_BROWSER_HOME = 0xAC,

		//
		VK_VOLUME_MUTE = 0xAD,
		VK_VOLUME_DOWN = 0xAE,
		VK_VOLUME_UP = 0xAF,
		VK_MEDIA_NEXT_TRACK = 0xB0,
		VK_MEDIA_PREV_TRACK = 0xB1,
		VK_MEDIA_STOP = 0xB2,
		VK_MEDIA_PLAY_PAUSE = 0xB3,
		VK_LAUNCH_MAIL = 0xB4,
		VK_LAUNCH_MEDIA_SELECT = 0xB5,
		VK_LAUNCH_APP1 = 0xB6,
		VK_LAUNCH_APP2 = 0xB7,

		//
		VK_OEM_1 = 0xBA, // ';:' for US
		VK_OEM_PLUS = 0xBB, // '+' any country
		VK_OEM_COMMA = 0xBC, // ',' any country
		VK_OEM_MINUS = 0xBD, // '-' any country
		VK_OEM_PERIOD = 0xBE, // '.' any country
		VK_OEM_2 = 0xBF, // '/?' for US
		VK_OEM_3 = 0xC0, // '`~' for US

		//
		VK_OEM_4 = 0xDB, //  '[{' for US
		VK_OEM_5 = 0xDC, //  '\|' for US
		VK_OEM_6 = 0xDD, //  ']}' for US
		VK_OEM_7 = 0xDE, //  ''"' for US
		VK_OEM_8 = 0xDF,

		//
		VK_OEM_AX = 0xE1, //  'AX' key on Japanese AX kbd
		VK_OEM_102 = 0xE2, //  "<>" or "\|" on RT 102-key kbd.
		VK_ICO_HELP = 0xE3, //  Help key on ICO
		VK_ICO_00 = 0xE4, //  00 key on ICO

		//
		VK_PROCESSKEY = 0xE5,

		//
		VK_ICO_CLEAR = 0xE6,

		//
		VK_PACKET = 0xE7,

		//
		VK_OEM_RESET = 0xE9,
		VK_OEM_JUMP = 0xEA,
		VK_OEM_PA1 = 0xEB,
		VK_OEM_PA2 = 0xEC,
		VK_OEM_PA3 = 0xED,
		VK_OEM_WSCTRL = 0xEE,
		VK_OEM_CUSEL = 0xEF,
		VK_OEM_ATTN = 0xF0,
		VK_OEM_FINISH = 0xF1,
		VK_OEM_COPY = 0xF2,
		VK_OEM_AUTO = 0xF3,
		VK_OEM_ENLW = 0xF4,
		VK_OEM_BACKTAB = 0xF5,

		//
		VK_ATTN = 0xF6,
		VK_CRSEL = 0xF7,
		VK_EXSEL = 0xF8,
		VK_EREOF = 0xF9,
		VK_PLAY = 0xFA,
		VK_ZOOM = 0xFB,
		VK_NONAME = 0xFC,
		VK_PA1 = 0xFD,
		VK_OEM_CLEAR = 0xFE
	}


	internal enum OBJID : uint
	{
		CHILDID_SELF = 0,
		INDEXID_OBJECT = 0,
		INDEXID_CONTAINER = 0,

		WINDOW = 0x00000000,
		SYSMENU = 0xFFFFFFFF,
		TITLEBAR = 0xFFFFFFFE,
		MENU = 0xFFFFFFFD,
		CLIENT = 0xFFFFFFFC,
		VSCROLL = 0xFFFFFFFB,
		HSCROLL = 0xFFFFFFFA,
		SIZEGRIP = 0xFFFFFFF9,
		CARET = 0xFFFFFFF8,
		CURSOR = 0xFFFFFFF7,
		ALERT = 0xFFFFFFF6,
		SOUND = 0xFFFFFFF5,
		QUERYCLASSNAMEIDX = 0xFFFFFFF4,
		NATIVEOM = 0xFFFFFFF0
	}

	internal enum StockObjects
	{
		WHITE_BRUSH = 0,
		LTGRAY_BRUSH = 1,
		GRAY_BRUSH = 2,
		DKGRAY_BRUSH = 3,
		BLACK_BRUSH = 4,
		NULL_BRUSH = 5,
		HOLLOW_BRUSH = NULL_BRUSH,
		WHITE_PEN = 6,
		BLACK_PEN = 7,
		NULL_PEN = 8,
		OEM_FIXED_FONT = 10,
		ANSI_FIXED_FONT = 11,
		ANSI_VAR_FONT = 12,
		SYSTEM_FONT = 13,
		DEVICE_DEFAULT_FONT = 14,
		DEFAULT_PALETTE = 15,
		SYSTEM_FIXED_FONT = 16,
		DEFAULT_GUI_FONT = 17,
		DC_BRUSH = 18,
		DC_PEN = 19,
	}

	internal enum PenStyle
	{
		SOLID = 0, //The pen is solid.
		DASH = 1, //The pen is dashed.
		DOT = 2, //The pen is dotted.
		DASHDOT = 3, //The pen has alternating dashes and dots.
		DASHDOTDOT = 4, //The pen has alternating dashes and double dots.
		NULL = 5, //The pen is invisible.
		INSIDEFRAME = 6, // Normally when the edge is drawn, it’s centred on the outer edge meaning that half the width of the pen is drawn

		// outside the shape’s edge, half is inside the shape’s edge. When PS_INSIDEFRAME is specified the edge is drawn 
		//completely inside the outer edge of the shape.
		USERSTYLE = 7,
		ALTERNATE = 8,
		STYLE_MASK = 0x0000000F,

		ENDCAP_ROUND = 0x00000000,
		ENDCAP_SQUARE = 0x00000100,
		ENDCAP_FLAT = 0x00000200,
		ENDCAP_MASK = 0x00000F00,

		JOIN_ROUND = 0x00000000,
		JOIN_BEVEL = 0x00001000,
		JOIN_MITER = 0x00002000,
		JOIN_MASK = 0x0000F000,

		COSMETIC = 0x00000000,
		GEOMETRIC = 0x00010000,
		TYPE_MASK = 0x000F0000
	}

	internal enum CombineRgnStyles
	{
		RGN_AND = 1,
		RGN_OR = 2,
		RGN_XOR = 3,
		RGN_DIFF = 4,
		RGN_COPY = 5,
		RGN_MIN = RGN_AND,
		RGN_MAX = RGN_COPY
	}

	[Flags]
	internal enum FILE_ATTRIBUTE : uint
	{
		READONLY = 0x00000001,
		HIDDEN = 0x00000002,
		SYSTEM = 0x00000004,
		DIRECTORY = 0x00000010,
		ARCHIVE = 0x00000020,
		DEVICE = 0x00000040,
		NORMAL = 0x00000080,
		TEMPORARY = 0x00000100,
		SPARSE_FILE = 0x00000200,
		REPARSE_POINT = 0x00000400,
		COMPRESSED = 0x00000800,
		OFFLINE = 0x00001000,
		NOT_CONTENT_INDEXED = 0x00002000,
		ENCRYPTED = 0x00004000
	}

	[Flags]
	internal enum SHGFI
	{
		/// <summary>get icon</summary>
		Icon = 0x000000100,

		/// <summary>get display name</summary>
		DisplayName = 0x000000200,

		/// <summary>get type name</summary>
		TypeName = 0x000000400,

		/// <summary>get attributes</summary>
		Attributes = 0x000000800,

		/// <summary>get icon location</summary>
		IconLocation = 0x000001000,

		/// <summary>return exe type</summary>
		ExeType = 0x000002000,

		/// <summary>get system icon index</summary>
		SysIconIndex = 0x000004000,

		/// <summary>put a link overlay on icon</summary>
		LinkOverlay = 0x000008000,

		/// <summary>show icon in selected state</summary>
		Selected = 0x000010000,

		/// <summary>get only specified attributes</summary>
		Attr_Specified = 0x000020000,

		/// <summary>get large icon</summary>
		LargeIcon = 0x000000000,

		/// <summary>get small icon</summary>
		SmallIcon = 0x000000001,

		/// <summary>get open icon</summary>
		OpenIcon = 0x000000002,

		/// <summary>get shell size icon</summary>
		ShellIconSize = 0x000000004,

		/// <summary>pszPath is a pidl</summary>
		PIDL = 0x000000008,

		/// <summary>use passed dwFileAttribute</summary>
		UseFileAttributes = 0x000000010,

		/// <summary>apply the appropriate overlays</summary>
		AddOverlays = 0x000000020,

		/// <summary>Get the index of the overlay in the upper 8 bits of the iIcon</summary>
		OverlayIndex = 0x000000040,
	}

	internal enum HookType
	{
		WH_JOURNALRECORD = 0,
		WH_JOURNALPLAYBACK = 1,
		WH_KEYBOARD = 2,
		WH_GETMESSAGE = 3,
		WH_CALLWNDPROC = 4,
		WH_CBT = 5,
		WH_SYSMSGFILTER = 6,
		WH_MOUSE = 7,
		WH_HARDWARE = 8,
		WH_DEBUG = 9,
		WH_SHELL = 10,
		WH_FOREGROUNDIDLE = 11,
		WH_CALLWNDPROCRET = 12,
		WH_KEYBOARD_LL = 13,
		WH_MOUSE_LL = 14
	}

	internal enum PROCESS_DPI_AWARENESS
	{
		PROCESS_DPI_UNAWARE = 0,
		PROCESS_SYSTEM_DPI_AWARE = 1,
		PROCESS_PER_MONITOR_DPI_AWARE = 2
	}

	[StructLayout(LayoutKind.Sequential)]
	internal class KBDLLHOOKSTRUCT
	{
		public uint vkCode;
		public uint scanCode;
		public KBDLLHOOKSTRUCTFlags flags;
		public uint time;
		public UIntPtr dwExtraInfo;
	}

	[Flags]
	public enum KBDLLHOOKSTRUCTFlags : uint
	{
		LLKHF_EXTENDED = 0x01,
		LLKHF_INJECTED = 0x10,
		LLKHF_ALTDOWN = 0x20,
	}
}