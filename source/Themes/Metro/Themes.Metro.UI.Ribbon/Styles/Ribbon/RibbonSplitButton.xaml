<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="/Zaaml.Themes.Metro;component/Styles/Button/SplitButton.Shared.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!-- Fallback DropDownGlyph-->
  <zm:PathIcon x:Key="FallbackDropDownGlyph" 
               SharedResource="True"
               VerticalAlignment="Center"
               HorizontalAlignment="Center"
               Margin="2"
               Data="{zm:ThemeResource Key=Metro.RibbonSplitButton.DropDownButton.Glyph.Data}"
               Style="{zm:ThemeResource Key=Metro.RibbonSplitButton.DropDownButton.Glyph.Style}"/>

<!-- LargeIconMarginConverter -->
  <zm:MaskThicknessConverter x:Key="LargeIconMarginConverter" Bottom="False" Top="False"/>
  
  <!--  Template  -->
  <ControlTemplate x:Key="RibbonSplitButtonTemplate"
                   TargetType="zm:RibbonSplitButton">

    <zm:RibbonItemTemplateRoot Background="Transparent"
                               VisualStateGroups="{StaticResource VisualStates}"
                               LayoutDependsOnItemStyle="IconContent TextBlock">

      <Border BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
        <zm:DockPanel>

          <!--  Main Button Part  -->
          <Border x:Name="MainButton"
                  Background="{TemplateBinding Background}"
                  BorderThickness="0">

            <zm:IconContentPresenter x:Name="IconContent"
                                     zm:PathIcon.Brush="{TemplateBinding Foreground}"
                                     MinWidth="16"
                                     MinHeight="16"
                                     Margin="{zm:TemplateBinding Path=Padding}"
                                     Content="{zm:TemplateBinding Path=Text}"
                                     Icon="{zm:TemplateBinding Path=SmallIcon}" />
          </Border>

          <!--  DropDown Button Part  -->
          <zm:ToggleButton x:Name="DropDownButton"
                           Margin="{zm:TemplateBinding Path=BorderThickness,
                                                       Converter={zm:NegateConverter}}"
                           
                           Padding="0"
                           VerticalContentAlignment="Stretch"
                           zm:DisableVeilControl.EnableVeil="False"
                           zm:DockPanel.Dock="Right"
                           zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=DropDownButton}"
                           BorderBrush="Transparent"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           ClickMode="Press"
                           Icon="{zm:TemplateBinding Path=DropDownGlyph,
                                                     TargetNullValue={StaticResource FallbackDropDownGlyph}}"
                           IsChecked="{zm:TemplateBinding Path=IsDropDownOpen,
                                                          Mode=TwoWay}"
                           IsTabStop="False"
                           ShowContent="False"
                           Visibility="{zm:TemplateBinding Path=ShowDropDownButton,
                                                           Converter={zm:VisibilityConverter}}">

            <zm:TwoLineTextBlockControl x:Name="TextBlock"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        zm:PathIcon.Brush="{TemplateBinding Foreground}"
                                        Glyph="{zm:TemplateBinding Path=DropDownGlyph,
                                                                   TargetNullValue={StaticResource FallbackDropDownGlyph}}"
                                        Mode="TwoLine"
                                        Text="{zm:TemplateBinding Path=Text}" />

          </zm:ToggleButton>

          <!--  PopupHost  -->
          <zm:PopupControlHost x:Name="PopupHost" />
        </zm:DockPanel>
      </Border>

      <!--  Disabled Veil  -->
      <zm:DisableVeilControl />

      <!--  Control Triggers  -->
      <zm:Extension.Triggers>
        <zm:SwitchDataTrigger Binding="{zm:TemplateBinding Path=ActualItemStyle}">

          <!--  Large  -->
          <zm:CaseTrigger Value="Large">
            
            <!-- IconContent -->
            <zm:SetterGroup TargetName="IconContent">
              <zm:Setter Property="Icon" Value="{zm:TemplateBinding Path=LargeIcon}" />
              <zm:Setter Property="ShowContent" Value="False" />
              <zm:Setter Property="MinWidth" Value="32" />
              <zm:Setter Property="MinHeight" Value="32" />
              <zm:Setter Property="Margin" Value="{zm:TemplateBinding Path=Padding, Converter={StaticResource LargeIconMarginConverter}}" />
            </zm:SetterGroup>

            <!-- DropDownButton -->
            <zm:SetterGroup TargetName="DropDownButton">
              <zm:Setter Property="zm:DockPanel.Dock" Value="Bottom" />
              <zm:Setter Property="ShowIcon" Value="False" />
              <zm:Setter Property="ShowContent" Value="True" />
            </zm:SetterGroup>
          </zm:CaseTrigger>

          <!--  Small  -->
          <zm:CaseTrigger Value="Small">
            <zm:Setter TargetName="IconContent" Property="ShowContent" Value="False" />
          </zm:CaseTrigger>

        </zm:SwitchDataTrigger>
      </zm:Extension.Triggers>

    </zm:RibbonItemTemplateRoot>
  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="RibbonSplitButtonBaseStyle" TargetType="zm:RibbonSplitButton">
    <zm:Setter Property="Padding" Value="3" />
    <zm:Setter Property="BorderThickness" Value="1" />
    <zm:Setter Property="HorizontalAlignment" Value="Left" />
    <zm:Setter Property="Template" Value="{StaticResource RibbonSplitButtonTemplate}" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />

    <zm:Setter Property="zm:Extension.Skin" Value="{zm:SelfBinding Path=ToolBar.(zm:Extension.ActualSkin), Converter={zm:Static Member=zm:SkinResourceConverter.Instance}, ConverterParameter=RibbonSplitButton}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="RibbonSplitButtonStyle" BasedOn="{StaticResource RibbonSplitButtonBaseStyle}" Skin="Metro.RibbonSplitButton" TargetType="zm:RibbonSplitButton">
    <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePathSource="Skin" />
  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="RibbonSplitButtonThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource RibbonSplitButtonStyle}" TargetType="zm:RibbonSplitButton" />

</zm:ThemeResourceDictionary>