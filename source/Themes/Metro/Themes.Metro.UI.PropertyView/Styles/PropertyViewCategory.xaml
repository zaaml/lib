<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="PropertyViewItemShared.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!--  Template  -->
  <ControlTemplate x:Key="PropertyViewCategoryTemplate"
                   TargetType="zm:PropertyViewCategory">
    <zm:ControlTemplateRoot Background="{zm:TemplateSkinBinding SkinPath=Background}"
                            VisualStateGroups="{StaticResource VisualStates}">

      <Border Margin="-1,-1,-1,0"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="1">

        <zm:PropertyViewItemCellPresenter>
          <zm:PropertyViewItemCell>
            <zm:DockPanel Margin="{TemplateBinding ActualLevelPadding}">

              <!--  Expander  -->
              <Border Width="16"
                      zm:DockPanel.Dock="Left">
                <zm:ToggleButton x:Name="ExpanderButton"
                                 zm:Extension.Skin="{zm:TemplateExpandoBinding Path=GlyphSkin}"
                                 Focusable="False"
                                 IsChecked="{zm:TemplateBinding Path=IsExpanded,
                                                                Mode=TwoWay}"
                                 IsTabStop="False"
                                 Template="{StaticResource ToggleButtonTemplate}"
                                 Visibility="{zm:TemplateBinding Path=HasItems,
                                                                 Converter={zm:VisibilityConverter}}" />
              </Border>

              <!--  CommonStatesBorder  -->
              <Border Padding="{TemplateBinding Padding}"
                      Background="{TemplateBinding Background}"
                      BorderThickness="0">

                <!--  Content  -->
                <zm:IconContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         zm:PathIcon.Brush="{TemplateBinding Foreground}"
                                         Content="{TemplateBinding Content}"
                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                         Icon="{TemplateBinding Icon}"
                                         IconDistance="{TemplateBinding IconDistance}"
                                         IconDock="{TemplateBinding IconDock}"
                                         ShowContent="{TemplateBinding ShowContent}"
                                         ShowIcon="{TemplateBinding ShowIcon}" />
              </Border>
            </zm:DockPanel>
          </zm:PropertyViewItemCell>

          <zm:PropertyViewItemCell />

        </zm:PropertyViewItemCellPresenter>
      </Border>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="PropertyViewCategoryBaseStyle" TargetType="zm:PropertyViewCategory">
    <zm:Setter Property="Padding" Value="3,2" />
    <zm:Setter Property="HorizontalAlignment" Value="Stretch" />
    <zm:Setter Property="HorizontalContentAlignment" Value="Left" />
    <zm:Setter Property="VerticalContentAlignment" Value="Top" />
    <zm:Setter Property="FontWeight" Value="Bold" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <zm:Setter Property="Template" Value="{StaticResource PropertyViewCategoryTemplate}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="PropertyViewCategoryStyle" BasedOn="{StaticResource PropertyViewCategoryBaseStyle}" Skin="Metro.PropertyView.PropertyViewCategory" TargetType="zm:PropertyViewCategory">

    <zm:SetterGroup ValuePathSource="Skin">

      <!--  GlyphSkin  -->
      <zm:SetterGroup ExpandoProperty="GlyphSkin" ValuePath="GlyphSkin">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="Selected" VisualState="Selected" />
      </zm:SetterGroup>

      <!--  Foreground  -->
      <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePath="Foreground" Property="Foreground" />

      <!--  Background  -->
      <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePath="Background" Property="Background" />

      <!--  BorderBrush  -->
      <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePath="BorderBrush" Property="BorderBrush" />
    </zm:SetterGroup>
  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="PropertyViewCategoryThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource PropertyViewCategoryStyle}" TargetType="zm:PropertyViewCategory" />

</zm:ThemeResourceDictionary>