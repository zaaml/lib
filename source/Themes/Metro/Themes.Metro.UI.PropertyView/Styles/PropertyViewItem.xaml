<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="PropertyViewItemShared.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!--  ValidationErrorControl Template  -->
  <ControlTemplate x:Key="ValidationErrorControlTemplate"
                   TargetType="zm:ValidationErrorControl">
    <zm:ControlTemplateRoot>
      <!--  ValidationErrorToolTip  -->
      <zm:ValidationErrorToolTip x:Name="ValidationToolTip"
                                 zm:PopupWidth="{zm:TemplateBinding Path=ActualWidth}"
                                 Content="{zm:TemplateBinding Path=Error}"
                                 StaysOpen="True">
        <zm:ValidationErrorToolTip.Placement>
          <zm:SnapPlacement Definition="{zm:Static Member=zm:SnapDefinition.Default}"
                            SnapSide="Bottom"
                            Target="{zm:TemplateBinding Path=ActualValidatedControl}" />
        </zm:ValidationErrorToolTip.Placement>
        <zm:ValidationErrorToolTip.Trigger>
          <zm:CompositePopupTrigger>
            <zm:MouseOverPopupTrigger CloseDelay="0:0:0.1" />
            <zm:ExplicitTrigger IsOpen="{zm:TemplateBinding Path=ActualShowValidationToolTip}" />
          </zm:CompositePopupTrigger>
        </zm:ValidationErrorToolTip.Trigger>
      </zm:ValidationErrorToolTip>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Template  -->
  <ControlTemplate x:Key="PropertyViewItemTemplate"
                   TargetType="zm:PropertyViewItem">
    <zm:ControlTemplateRoot VisualStateGroups="{StaticResource VisualStates}">
      <Border Margin="-1,-1,-1,0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="1">

        <zm:PropertyViewItemCellPresenter>

          <!--  Header Cell  -->
          <zm:PropertyViewItemCell>
            <zm:Panel Margin="-20,0,0,0">

              <Border Width="16"
                      Margin="20,0,0,0"
                      HorizontalAlignment="Left"
                      Background="{zm:TemplateSkinBinding SkinPath=CategoryLine}" />


              <Border Background="{TemplateBinding Background}">
                <zm:ContentControl Foreground="{zm:TemplateExpandoBinding Path=HeaderForeground}">
                  <zm:DockPanel Margin="{TemplateBinding ActualLevelPadding}">

                    <!--  Expander  -->
                    <Border Width="16"
                            zm:DockPanel.Dock="Left">
                      <zm:ToggleButton x:Name="ExpanderButton"
                                       zm:Extension.Skin="{zm:TemplateExpandoBinding Path=GlyphSkin}"
                                       Focusable="False"
                                       IsChecked="{zm:TemplateBinding Path=IsExpanded,
                                                                      Mode=TwoWay}"
                                       IsTabStop="False"
                                       Template="{StaticResource ToggleButtonTemplate}"
                                       Visibility="{zm:TemplateBinding Path=HasItems,
                                                                       Converter={zm:VisibilityConverter}}" />
                    </Border>

                    <!--  CommonStatesBorder  -->
                    <Border Padding="{TemplateBinding Padding}"
                            BorderThickness="0">

                      <!--  Content  -->
                      <zm:IconContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               zm:PathIcon.Brush="{TemplateBinding Foreground}"
                                               Content="{TemplateBinding Content}"
                                               ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Icon="{TemplateBinding Icon}"
                                               IconDistance="{TemplateBinding IconDistance}"
                                               IconDock="{TemplateBinding IconDock}"
                                               ShowContent="{TemplateBinding ShowContent}"
                                               ShowIcon="{TemplateBinding ShowIcon}" />
                    </Border>
                  </zm:DockPanel>
                </zm:ContentControl>

              </Border>

            </zm:Panel>
          </zm:PropertyViewItemCell>

          <!--  Editor Cell  -->
          <zm:PropertyViewItemCell>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1,0,1,0">

              <zm:ContentControl HorizontalContentAlignment="Stretch"
                                 VerticalContentAlignment="Stretch"
                                 Content="{zm:TemplateBinding Path=Editor}" />
            </Border>
          </zm:PropertyViewItemCell>

        </zm:PropertyViewItemCellPresenter>
      </Border>

      <zm:ValidationErrorControl x:Name="ValidationErrorControl"
                                 Template="{StaticResource ValidationErrorControlTemplate}" />
    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="PropertyViewItemBaseStyle" TargetType="zm:PropertyViewItem">
    <zm:Setter Property="Padding" Value="3,2" />
    <zm:Setter Property="HorizontalAlignment" Value="Stretch" />
    <zm:Setter Property="HorizontalContentAlignment" Value="Left" />
    <zm:Setter Property="VerticalContentAlignment" Value="Top" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <zm:Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

    <zm:Setter Property="Template" Value="{StaticResource PropertyViewItemTemplate}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="PropertyViewItemStyle" BasedOn="{StaticResource PropertyViewItemBaseStyle}" Skin="Metro.PropertyView.PropertyViewItem" TargetType="zm:PropertyViewItem">

    <zm:SetterGroup ValuePathSource="Skin">

      <!--  GlyphSkin  -->
      <zm:SetterGroup ExpandoProperty="GlyphSkin" ValuePath="GlyphSkin">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="Selected" VisualState="Selected" />
      </zm:SetterGroup>

      <!--  Foreground  -->
      <zm:SetterGroup ExpandoProperty="HeaderForeground" SettersSource="{StaticResource SkinSetters}" ValuePath="Foreground" />

      <!--  Background  -->
      <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePath="Background" Property="Background" />

      <!--  BorderBrush  -->
      <zm:SetterGroup SettersSource="{StaticResource SkinSetters}" ValuePath="BorderBrush" Property="BorderBrush" />

    </zm:SetterGroup>

  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="PropertyViewItemThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource PropertyViewItemStyle}" TargetType="zm:PropertyViewItem" />

</zm:ThemeResourceDictionary>