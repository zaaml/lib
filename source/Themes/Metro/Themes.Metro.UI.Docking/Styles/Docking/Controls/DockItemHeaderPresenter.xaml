<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="/Zaaml.Themes.UI.Metro;component/Styles/Button/Button.xaml" />
    <zm:ThemeResourceDictionary Source="/Zaaml.Themes.UI.Metro;component/Styles/Button/DropDownButton.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!--  DockItemButtonStyle  -->
  <zm:Style x:Key="DockItemButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="zm:ButtonBase">
    <zm:Setter Property="Padding" Value="0" />
    <zm:Setter Property="Width" Value="21" />
    <zm:Setter Property="Height" Value="21" />
    <zm:Setter Property="BorderThickness" Value="0" />
  </zm:Style>

  <!--  DockItemNativeButtonStyle  -->
  <Style x:Key="DockItemNativeButtonStyle"
         BasedOn="{zm:NativeStyle Style={StaticResource DockItemButtonStyle}}"
         TargetType="zm:ButtonBase" />

  <!--  DockItemDropDownButtonStyle  -->
  <zm:Style x:Key="DockItemDropDownButtonStyle" BasedOn="{StaticResource DropDownButtonStyle}" TargetType="zm:DropDownButton">
    <zm:Setter Property="Padding" Value="0" />
    <zm:Setter Property="Width" Value="21" />
    <zm:Setter Property="Height" Value="21" />
    <zm:Setter Property="BorderThickness" Value="0" />
  </zm:Style>

  <!--  Visual States  -->
  <zm:VisualStateGroupCollection x:Key="DockItemHeaderPresenterVisualStates">

    <!--  CommonStates States  -->
    <zm:VisualStateGroup Name="CommonStates">
      <zm:VisualState Name="Normal" />
    </zm:VisualStateGroup>

    <!--  Selection States  -->
    <zm:VisualStateGroup Name="SelectionStates">
      <zm:VisualState Name="Unselected" />
      <zm:VisualState Name="Selected" />
      <zm:VisualState Name="SelectedInactive" />
    </zm:VisualStateGroup>

  </zm:VisualStateGroupCollection>

  <!--  DockItemNativeDropDownButtonStyle  -->
  <Style x:Key="DockItemNativeDropDownButtonStyle"
         BasedOn="{zm:NativeStyle Style={StaticResource DockItemDropDownButtonStyle}}"
         TargetType="zm:DropDownButton" />

  <!--  Template  -->
  <ControlTemplate x:Key="DockItemHeaderPresenterTemplate"
                   TargetType="zm:DockItemHeaderPresenter">
    <zm:ControlTemplateRoot VisualStateGroups="{StaticResource DockItemHeaderPresenterVisualStates}">

      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">

        <zm:DockPanel>

          <!--  Title  -->
          <TextBlock Margin="6,0,0,0"
                     VerticalAlignment="Center"
                     Text="{Binding Path=DockItem.Title, RelativeSource={RelativeSource TemplatedParent}}" />

          <!--  Buttons  -->
          <StackPanel zm:DockPanel.Dock="Right"
                      Orientation="Horizontal">

            <!--  Menu Button  -->
            <StackPanel.Resources>
              <zm:StyleResourceItem x:Key="PathIconStyle"
                                    Style="{zm:TemplateSkinBinding SkinPath=Button.Glyph.Style}" />
            </StackPanel.Resources>

            <zm:DropDownButton zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=Button}"
                               zm:PathIcon.Data="{zm:TemplateSkinBinding SkinPath=Button.Glyph.Menu}"
                               Foreground="{TemplateBinding Foreground}"
                               ShowDropDownGlyph="False"
                               Style="{StaticResource DockItemNativeDropDownButtonStyle}">

              <zm:DropDownButton.PopupControl>
                <zm:PopupMenu>
                  <zm:MenuItem Command="{zm:Static Member=zm:DockItemHeaderPresenter.SetDockStateCommand}"
                               CommandParameter="{zm:Static Member=zm:DockItemState.Float}"
                               Header="Float" />
                  <zm:MenuItem Command="{zm:Static Member=zm:DockItemHeaderPresenter.SetDockStateCommand}"
                               CommandParameter="{zm:Static Member=zm:DockItemState.Dock}"
                               Header="Dock" />
                  <zm:MenuItem Command="{zm:Static Member=zm:DockItemHeaderPresenter.SetDockStateCommand}"
                               CommandParameter="{zm:Static Member=zm:DockItemState.Document}"
                               Header="Document" />
                  <zm:MenuItem Command="{zm:Static Member=zm:DockItemHeaderPresenter.SetDockStateCommand}"
                               CommandParameter="{zm:Static Member=zm:DockItemState.AutoHide}"
                               Header="AutoHide" />
                </zm:PopupMenu>
              </zm:DropDownButton.PopupControl>

            </zm:DropDownButton>

            <!--  Pin Button  -->
            <zm:ToggleButton zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=Button}"
                             Foreground="{TemplateBinding Foreground}"
                             IsChecked="{zm:TemplateBinding Path=IsAutoHideState,
                                                            Mode=TwoWay}"
                             Style="{StaticResource DockItemNativeButtonStyle}">

              <zm:ToggleButton.Icon>
                <zm:PathIcon Data="{zm:TemplateSkinBinding SkinPath=Button.Glyph.Pin}"
                             RenderTransform="{zm:TemplateBinding Path=IsAutoHideState,
                                                                  Converter={zm:TernaryConverter TrueValue={zm:RotateTransform Angle=90},
                                                                                                 FalseValue={x:Null}}}"
                             RenderTransformOrigin="0.5 0.5" />
              </zm:ToggleButton.Icon>
            </zm:ToggleButton>

            <!--  Close Button  -->
            <zm:Button zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=Button}"
                       zm:PathIcon.Data="{zm:TemplateSkinBinding SkinPath=Button.Glyph.Close}"
                       Command="{zm:Static Member=zm:DockItemHeaderPresenter.SetDockStateCommand}"
                       CommandParameter="{zm:Static Member=zm:DockItemState.Hidden}"
                       Foreground="{TemplateBinding Foreground}"
                       Style="{StaticResource DockItemNativeButtonStyle}" />

          </StackPanel>
        </zm:DockPanel>
      </Border>

    </zm:ControlTemplateRoot>

  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="DockItemHeaderPresenterBaseStyle" TargetType="zm:DockItemHeaderPresenter">
    <zm:Setter Property="BorderThickness" Value="0" />
    <zm:Setter Property="Template" Value="{StaticResource DockItemHeaderPresenterTemplate}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="DockItemHeaderPresenterStyle" BasedOn="{StaticResource DockItemHeaderPresenterBaseStyle}" Skin="Metro.Docking.DockItemHeaderPresenter" TargetType="zm:DockItemHeaderPresenter">

    <!--  SkinSetters  -->
    <zm:SetterGroup ValuePathSource="Skin">

      <!--  Foreground  -->
      <zm:SetterGroup ValuePath="Foreground" Property="Foreground">
        <zm:Setter ValuePath="Normal" VisualState="Normal" />
        <zm:Setter ValuePath="Selected" VisualState="Selected" />
        <zm:Setter Priority="1" ValuePath="SelectedInactive" VisualState="SelectedInactive" />
      </zm:SetterGroup>

      <!--  Background  -->
      <zm:SetterGroup ValuePath="Background" Property="Background">
        <zm:Setter ValuePath="Normal" VisualState="Normal" />
        <zm:Setter ValuePath="Selected" VisualState="Selected" />
        <zm:Setter Priority="1" ValuePath="SelectedInactive" VisualState="SelectedInactive" />
      </zm:SetterGroup>

      <!--  BorderBrush  -->
      <zm:SetterGroup ValuePath="BorderBrush" Property="BorderBrush">
        <zm:Setter ValuePath="Normal" VisualState="Normal" />
        <zm:Setter ValuePath="Selected" VisualState="Selected" />
        <zm:Setter Priority="1" ValuePath="SelectedInactive" VisualState="SelectedInactive" />
      </zm:SetterGroup>
    </zm:SetterGroup>
  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="DockItemHeaderPresenterThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource DockItemHeaderPresenterStyle}" TargetType="zm:DockItemHeaderPresenter" />

</zm:ThemeResourceDictionary>