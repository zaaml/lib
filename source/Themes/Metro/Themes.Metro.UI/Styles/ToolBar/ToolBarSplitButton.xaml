<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:zm="http://schemas.zaaml.com/xaml" 
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="/Zaaml.Themes.Metro;component/Styles/Button/SplitButton.Shared.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!-- Fallback DropDownGlyph-->
  <zm:PathIcon x:Key="FallbackDropDownGlyph" 
               SharedResource="True"
               VerticalAlignment="Center"
               HorizontalAlignment="Center"
               Margin="2"
               Data="{zm:ThemeResource Key=Metro.ToolBarSplitButton.DropDownButton.Glyph.Data}"
               Style="{zm:ThemeResource Key=Metro.ToolBarSplitButton.DropDownButton.Glyph.Style}"/>  
  
  <!-- Template -->
  <ControlTemplate x:Key="ToolBarSplitButtonTemplate" TargetType="zm:ToolBarSplitButtonBase">

    <zm:ControlTemplateRoot Background="Transparent" 
                            VisualStateGroups="{StaticResource VisualStates}">

      <Border BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}">
        <zm:DockPanel>

          <!-- Main Button Part -->
          <Border x:Name="MainButton"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}"
                  BorderThickness="0">

            <zm:IconContentPresenter zm:PathIcon.Brush="{TemplateBinding Foreground}"
                                     Icon="{TemplateBinding Icon}" 
                                     IconDock="{TemplateBinding IconDock}"
                                     IconDistance="{TemplateBinding IconDistance}"
                                     ShowIcon="{TemplateBinding ShowIcon}"
                                     ShowContent="{TemplateBinding ShowContent}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Content="{TemplateBinding Content}"
                                     ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Border>

          <!-- DropDown Button Part -->
          <zm:ToggleButton x:Name="DropDownButton"
                           zm:DockPanel.Dock="{TemplateBinding DropDownButtonDock}"
                           zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=DropDownButton}"
                           zm:DisableVeilControl.EnableVeil="False"
                           Padding="0"
                           IsTabStop="False"
                           ClickMode="Press"
                           Icon="{zm:TemplateBinding Path=DropDownGlyph, TargetNullValue={StaticResource FallbackDropDownGlyph}}"
                           VerticalContentAlignment="Stretch"
                           Visibility="{Binding Path=ShowDropDownButton, RelativeSource={RelativeSource TemplatedParent}, Converter={zm:VisibilityConverter}}"
                           IsChecked="{zm:TemplateBinding Path=IsDropDownOpen, Mode=TwoWay}"
                           BorderBrush="Transparent"
                           Margin="{zm:TemplateBinding Path=BorderThickness, Converter={zm:NegateConverter}}"
                           BorderThickness="{TemplateBinding BorderThickness}" />

          <!-- Splitter -->
          <Border zm:DockPanel.Dock="{TemplateBinding DropDownButtonDock}"
                  BorderThickness="1,1,0,0"  
                  BorderBrush="{zm:TemplateExpandoBinding Path=SplitterBrush}"
                  Visibility="{zm:TemplateBinding Path=ShowSeparator, Converter={zm:VisibilityConverter}}"/>

          <!--  PopupHost  -->
          <zm:PopupControlHost x:Name="PopupHost" />
        </zm:DockPanel>
      </Border>

      <!-- Disabled Veil -->
      <zm:DisableVeilControl />

    </zm:ControlTemplateRoot>
    
  </ControlTemplate>

  <!-- Base Style -->
  <zm:Style x:Key="ToolBarSplitButtonBaseStyle" TargetType="zm:ToolBarSplitButtonBase">
    <zm:Setter Property="BorderThickness" Value="1" />
    <zm:Setter Property="ShowSeparator" Value="False" />
    <zm:Setter Property="Padding" Value="3" />
    <zm:Setter Property="VerticalContentAlignment" Value="Center" />
    <zm:Setter Property="HorizontalContentAlignment" Value="Center" />
    <zm:Setter Property="Template" Value="{StaticResource ToolBarSplitButtonTemplate}" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
  </zm:Style>

  <!-- Style -->
  <zm:Style x:Key="ToolBarSplitButtonStyle" TargetType="zm:ToolBarSplitButtonBase" BasedOn="{StaticResource ToolBarSplitButtonBaseStyle}"
            Skin="Metro.ToolBarSplitButton">

    <zm:SetterGroup ValuePathSource="Skin" SettersSource="{StaticResource SkinSetters}" />

    <zm:Setter Property="zm:Extension.Skin" Value="{zm:SelfBinding Path=ToolBar.(zm:Extension.ActualSkin), Converter={zm:Static Member=zm:SkinResourceConverter.Instance}, ConverterParameter=ToolBarSplitButton}" />
  </zm:Style>

  <!-- Theme Styles -->
  <zm:ThemeStyle x:Key="ToolBarSplitButtonThemeStyle" TargetType="zm:ToolBarSplitButton" BasedOn="{StaticResource ToolBarSplitButtonStyle}" zmb:Deferred="True" />
  <zm:ThemeStyle x:Key="ToolBarSplitToggleButtonThemeStyle" TargetType="zm:ToolBarSplitToggleButton" BasedOn="{StaticResource ToolBarSplitButtonStyle}" zmb:Deferred="True" />

</zm:ThemeResourceDictionary>