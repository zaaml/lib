<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../Shared/DottedDragThumbControl.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!--  Visual States  -->
  <zm:VisualStateGroupCollection x:Key="VisualStates">

    <!--  CommonStates States  -->
    <zm:VisualStateGroup Name="CommonStates">
      <zm:VisualState Name="Normal" />
      <zm:VisualState Name="MouseOver" />
      <zm:VisualState Name="Disabled" />
    </zm:VisualStateGroup>
  </zm:VisualStateGroupCollection>

  <!--  DragHandleTemplate  -->
  <ControlTemplate x:Key="DragHandleTemplate"
                   TargetType="zm:Control">
    <zm:ControlTemplateRoot Background="Transparent" />
  </ControlTemplate>

  <!--  Template  -->
  <ControlTemplate x:Key="ToolBarControlTemplate"
                   TargetType="zm:ToolBarControl">
    <zm:ControlTemplateRoot Background="{TemplateBinding Background}"
                            UseLayoutRounding="True"
                            VisualStateGroups="{StaticResource VisualStates}">

      <zm:FlexPanel x:Name="FlexPanel"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="{TemplateBinding ActualOrientation}"
                    Stretch="Fill"
                    zm:FlexChildDefinition.StretchDirection="Shrink">

        <!--  DragHandle  -->
        <zm:Control x:Name="DragHandle"
                    zm:FlexDefinition.StretchDirection="None"
                    Cursor="Hand"
                    Focusable="False"
                    IsTabStop="False"
                    Template="{StaticResource DragHandleTemplate}"
                    Visibility="{TemplateBinding ActualDragHandleVisibility}" />

        <!--  ItemsPresenter  -->
        <zm:ToolBarItemsPresenter x:Name="ItemsPresenter">
          <zm:Extension.Behaviors>
            <zm:ActualSizeBehavior x:Name="ActualSizeBehavior" />
          </zm:Extension.Behaviors>
        </zm:ToolBarItemsPresenter>

        <!--  Menu  -->
        <zm:DropDownButton x:Name="MenuButton"
                           Padding="0"
                           zm:Extension.Skin="{zm:TemplateSkinBinding SkinPath=MenuButton}"
                           zm:FlexDefinition.StretchDirection="None"
                           BorderThickness="0"
                           Focusable="False"
                           IsTabStop="False"
                           IsDropDownOpen="{zm:TemplateBinding Path=IsMenuOpen,
                                                               Mode=TwoWay}"
                           ShowDropDownGlyph="False"
                           Visibility="{TemplateBinding ActualMenuButtonVisibility}">
          <!--  Glyph  -->
          <Path x:Name="Glyph"
                Width="12"
                Height="12"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{zm:ThemeResource Key=Metro.Glyphs.ToolBar.DropDown}"
                Stretch="Fill"
                Style="{zm:ThemeResource Key=Metro.SmallGlyphStyle}" />

          <zm:DropDownButton.PopupControl>
            <zm:PopupBar BorderStyle="Border">
              <zm:ToolBarOverflowItemsPresenter x:Name="OverflowItemsPresenter"
                                                MinHeight="{Binding Path=ActualHeight, ElementName=ActualSizeBehavior}"
                                                Margin="1" />
            </zm:PopupBar>
          </zm:DropDownButton.PopupControl>
        </zm:DropDownButton>
      </zm:FlexPanel>

      <!--  Disabled Veil  -->
      <zm:DisableVeilControl />

      <zm:Extension.Triggers>

        <zm:DataTrigger Binding="{zm:TemplateBinding Path=Tray}"
                        Comparer="{zm:TriggerComparer Operator=NotEqual}"
                        Value="{x:Null}">
          <zm:Setter Property="Background" Value="{zm:TemplateBinding Path=Tray.Background}" />
        </zm:DataTrigger>

        <zm:SwitchDataTrigger Binding="{zm:TemplateBinding Path=ActualOrientation}">
          <zm:CaseTrigger Value="Vertical">
            <zm:Setter TargetName="ItemsPresenter" Property="VerticalAlignment" Value="Top" />
            <zm:Setter TargetName="FlexPanel" Property="VerticalAlignment" Value="Top" />
            <zm:Setter TargetName="FlexPanel" Property="HorizontalAlignment" Value="Stretch" />
            <zm:Setter TargetName="Glyph" Property="Margin" Value="2,0" />
            <zm:Setter TargetName="MenuButton" Property="Height" Value="10" />
            <zm:Setter TargetName="MenuButton" Property="HorizontalContentAlignment" Value="Right" />
            <zm:Setter TargetName="DragHandle" Property="Template" Value="{StaticResource DottedHorizontalDragHandleTemplate}" />
          </zm:CaseTrigger>

          <zm:CaseTrigger Value="Horizontal">
            <zm:Setter TargetName="ItemsPresenter" Property="HorizontalAlignment" Value="Left" />
            <zm:Setter TargetName="FlexPanel" Property="HorizontalAlignment" Value="Left" />
            <zm:Setter TargetName="FlexPanel" Property="VerticalAlignment" Value="Stretch" />
            <zm:Setter TargetName="Glyph" Property="Margin" Value="0,2" />
            <zm:Setter TargetName="MenuButton" Property="Width" Value="10" />
            <zm:Setter TargetName="MenuButton" Property="VerticalContentAlignment" Value="Bottom" />
            <zm:Setter TargetName="DragHandle" Property="Template" Value="{StaticResource DottedVerticalDragHandleTemplate}" />
          </zm:CaseTrigger>
        </zm:SwitchDataTrigger>

      </zm:Extension.Triggers>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="ToolBarControlBaseStyle" TargetType="zm:ToolBarControl">
    <zm:Setter Property="Template" Value="{StaticResource ToolBarControlTemplate}" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <zm:Setter Property="Focusable" Value="False" />
    <zm:Setter Property="IsTabStop" Value="False" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="ToolBarControlBase" BasedOn="{StaticResource ToolBarControlBaseStyle}" Skin="Metro.ToolBarControl" TargetType="zm:ToolBarControl">

    <zm:SetterGroup ValuePathSource="Skin">

      <!--  Background  -->
      <zm:Setter ValuePath="Background" Property="Background" />

    </zm:SetterGroup>

  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="ToolBarControlThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource ToolBarControlBase}" TargetType="zm:ToolBarControl" />

</zm:ThemeResourceDictionary>