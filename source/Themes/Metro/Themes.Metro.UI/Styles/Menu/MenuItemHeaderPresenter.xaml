<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:zm="http://schemas.zaaml.com/xaml">

  <zm:ThemeResourceDictionary.MergedDictionaries>
    <zm:ThemeResourceDictionary Source="MenuCommon.xaml" />
  </zm:ThemeResourceDictionary.MergedDictionaries>

  <!--  Visual States  -->
  <zm:VisualStateGroupCollection x:Key="VisualStates">

    <!--  CommonStates States  -->
    <zm:VisualStateGroup Name="CommonStates">
      <zm:VisualState Name="Normal" />
      <zm:VisualState Name="Highlighted" />
      <zm:VisualState Name="MouseOver" />
      <zm:VisualState Name="Pressed" />
    </zm:VisualStateGroup>

    <!--  CheckStates States  -->
    <zm:VisualStateGroup Name="CheckStates">
      <zm:VisualState Name="Checked" />
      <zm:VisualState Name="Unchecked" />
      <zm:VisualState Name="Indeterminate" />
    </zm:VisualStateGroup>

  </zm:VisualStateGroupCollection>


  <!--  CheckBox Icon  -->
  <zm:TemplateIcon x:Key="CheckBoxIconTemplate"
                   SharedResource="True">
    <zm:TemplateIcon.Template>
      <DataTemplate>
        <zm:CheckBoxGlyphControl Width="14"
                                 Height="14"
                                 IsChecked="{zm:ExpandoBinding Path=IsChecked,
                                                               RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                              AncestorType=zm:IconPresenter},
                                                               FallbackValue={zm:False}}" />
      </DataTemplate>
    </zm:TemplateIcon.Template>
  </zm:TemplateIcon>

  <!--  Radio Icon  -->
  <zm:TemplateIcon x:Key="RadioIconTemplate"
                   SharedResource="True">
    <zm:TemplateIcon.Template>
      <DataTemplate>
        <zm:RadioGlyphControl Width="14"
                              Height="14"
                              IsChecked="{zm:ExpandoBinding Path=IsChecked,
                                                            RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                           AncestorType=zm:IconPresenter},
                                                            FallbackValue={zm:False}}" />
      </DataTemplate>
    </zm:TemplateIcon.Template>
  </zm:TemplateIcon>

  <!--  SubmenuHeaderPopup Template  -->
  <ControlTemplate x:Key="SubmenuHeaderPopupTemplate"
                   TargetType="zm:MenuItemHeaderPresenter">
    <zm:ControlTemplateRoot Background="Transparent"
                            UseLayoutRounding="True"
                            VisualStateGroups="{StaticResource VisualStates}">

      <!--  Header  -->

      <Border MinWidth="140"
              MinHeight="24"
              Background="{TemplateBinding Background}"
              BorderBrush="Transparent"
              Style="{StaticResource MenuItemBorderStyle}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <!--  Icon/Glyph  -->
          <zm:SharedSizeContentControl Grid.Column="0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Foreground="{zm:TemplateExpandoBinding Path=IconForeground}"
                                       ShareHeight="False"
                                       SharedSizeKey="IconSharedColumn">

            <Border MinWidth="24"
                    Margin="1"
                    Padding="2"
                    Background="{zm:TemplateExpandoBinding Path=IconBackground}"
                    BorderBrush="{zm:TemplateExpandoBinding Path=IconBorderBrush}"
                    BorderThickness="1">
              <zm:IconPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Icon="{TemplateBinding Icon}">

                <zm:Extension.Triggers>
                  <zm:SwitchDataTrigger Binding="{zm:TemplateBinding Path=MenuItem, Converter={zm:Static Member=zm:ValueTypeConverter.Instance}}">

                    <zm:CaseTrigger Value="{zm:Type TypeName=zm:CheckBoxMenuItem}">
                      <zm:Setter Property="Icon" Value="{StaticResource CheckBoxIconTemplate}" />
                      <zm:Setter ExpandoProperty="IsChecked" Value="{zm:TemplateBinding Path=MenuItem.IsChecked}" />
                    </zm:CaseTrigger>

                    <zm:CaseTrigger Value="{zm:Type TypeName=zm:RadioMenuItem}">
                      <zm:Setter Property="Icon" Value="{StaticResource RadioIconTemplate}" />
                      <zm:Setter ExpandoProperty="IsChecked" Value="{zm:TemplateBinding Path=MenuItem.IsChecked}" />
                    </zm:CaseTrigger>

                  </zm:SwitchDataTrigger>
                </zm:Extension.Triggers>

              </zm:IconPresenter>
            </Border>

          </zm:SharedSizeContentControl>

          <!--  Content  -->
          <zm:SharedSizeContentControl Grid.Column="1"
                                       ShareHeight="False"
                                       SharedSizeKey="ContentSharedColumn">
            <ContentPresenter Margin="4,0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Header}"
                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
          </zm:SharedSizeContentControl>

          <!--  Shortcut  -->
          <zm:SharedSizeContentControl Grid.Column="2"
                                       ShareHeight="False"
                                       SharedSizeKey="ShortcutSharedColumn">
            <ContentPresenter Margin="30,0,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{zm:TemplateBinding Path=InputGestureText}"
                              Visibility="{zm:TemplateBinding Path=InputGestureText,
                                                              Converter={zm:VisibilityConverter}}" />
          </zm:SharedSizeContentControl>

          <!--  SubMenu Glyph  -->
          <zm:SharedSizeContentControl Grid.Column="3"
                                       ShareHeight="False"
                                       SharedSizeKey="SubMenuGlyphSharedColumn">
            <ContentControl Margin="4,0"
                            HorizontalContentAlignment="Right"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            Foreground="{zm:TemplateBinding Path=Foreground}"
                            Template="{StaticResource ToggleSubmenuButtonTemplate}"
                            Visibility="{zm:TemplateBinding Path=ActualShowSubmenuGlyph,
                                                            Converter={zm:VisibilityConverter}}" />
          </zm:SharedSizeContentControl>
        </Grid>
      </Border>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  SubmenuHeader Template  -->
  <ControlTemplate x:Key="SubmenuHeaderTemplate"
                   TargetType="zm:MenuItemHeaderPresenter">
    <zm:ControlTemplateRoot Background="Transparent"
                            UseLayoutRounding="True"
                            VisualStateGroups="{StaticResource VisualStates}">

      <!--  Header  -->
      <Border MinHeight="24"
              Background="{TemplateBinding Background}"
              BorderBrush="Transparent"
              Style="{StaticResource MenuItemBorderStyle}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <!--  Icon/Glyph  -->
          <zm:SharedSizeContentControl Grid.Column="0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Foreground="{zm:TemplateExpandoBinding Path=IconForeground}"
                                       ShareHeight="False"
                                       SharedSizeKey="IconSharedColumn"
                                       Visibility="{zm:TemplateBinding Path=Icon,
                                                                       Converter={zm:VisibilityConverter}}">

            <Border MinWidth="24"
                    Margin="1"
                    Padding="2"
                    Background="{zm:TemplateExpandoBinding Path=IconBackground}"
                    BorderBrush="{zm:TemplateExpandoBinding Path=IconBorderBrush}"
                    BorderThickness="1">

              <zm:IconPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Icon="{TemplateBinding Icon}">

                <zm:Extension.Triggers>
                  <zm:SwitchDataTrigger Binding="{zm:TemplateBinding Path=MenuItem, Converter={zm:Static Member=zm:ValueTypeConverter.Instance}}">

                    <zm:CaseTrigger Value="{zm:Type TypeName=zm:CheckBoxMenuItem}">
                      <zm:Setter Property="Icon" Value="{StaticResource CheckBoxIconTemplate}" />
                      <zm:Setter ExpandoProperty="IsChecked" Value="{zm:TemplateBinding Path=MenuItem.IsChecked}" />
                    </zm:CaseTrigger>

                    <zm:CaseTrigger Value="{zm:Type TypeName=zm:RadioMenuItem}">
                      <zm:Setter Property="Icon" Value="{StaticResource RadioIconTemplate}" />
                      <zm:Setter ExpandoProperty="IsChecked" Value="{zm:TemplateBinding Path=MenuItem.IsChecked}" />
                    </zm:CaseTrigger>

                  </zm:SwitchDataTrigger>
                </zm:Extension.Triggers>

              </zm:IconPresenter>

            </Border>

          </zm:SharedSizeContentControl>

          <!--  Content  -->
          <zm:SharedSizeContentControl Grid.Column="1"
                                       HorizontalAlignment="{zm:TemplateBinding Path=HorizontalContentAlignment}"
                                       VerticalAlignment="{zm:TemplateBinding Path=VerticalContentAlignment}"
                                       ShareHeight="False"
                                       SharedSizeKey="ContentSharedColumn">
            <ContentPresenter Margin="4,0"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding Header}"
                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
          </zm:SharedSizeContentControl>
        </Grid>
      </Border>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  TopLevel Template  -->
  <ControlTemplate x:Key="TopLevelTemplate"
                   TargetType="zm:MenuItemHeaderPresenter">
    <zm:ControlTemplateRoot Background="Transparent"
                            UseLayoutRounding="True"
                            VisualStateGroups="{StaticResource VisualStates}">

      <!--  Header  -->
      <Border Padding="8,2"
              Background="{TemplateBinding Background}"
              BorderBrush="Transparent"
              Style="{StaticResource MenuItemBorderStyle}">

        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Content="{TemplateBinding Header}"
                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
      </Border>

    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Template Converter  -->
  <zm:SwitchConverter x:Key="TemplateConverter">
    <zm:Case Key="TopLevelItem" Value="{StaticResource TopLevelTemplate}" />
    <zm:Case Key="TopLevelHeaderPopup" Value="{StaticResource TopLevelTemplate}" />
    <zm:Case Key="TopLevelHeaderInline" Value="{StaticResource TopLevelTemplate}" />

    <zm:Case Key="SubmenuItem" Value="{StaticResource SubmenuHeaderPopupTemplate}" />
    <zm:Case Key="SubmenuHeaderPopup" Value="{StaticResource SubmenuHeaderPopupTemplate}" />
    <zm:Case Key="SubmenuHeaderInline" Value="{StaticResource SubmenuHeaderTemplate}" />
  </zm:SwitchConverter>

  <!--  Base Style  -->
  <zm:Style x:Key="MenuItemHeaderBaseStyle" TargetType="zm:MenuItemHeaderPresenter">
    <zm:Setter Property="Template" Value="{zm:SelfBinding Path=ActualRole, Converter={StaticResource TemplateConverter}}" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="MenuItemHeaderStyle" BasedOn="{StaticResource MenuItemHeaderBaseStyle}" TargetType="zm:MenuItemHeaderPresenter">

    <zm:SetterGroup ValuePathSource="Skin">

      <!--  Foreground  -->
      <zm:SetterGroup ValuePath="Foreground" Property="Foreground">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="Highlighted" VisualState="Highlighted" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter Priority="1" ValuePath="Pressed" VisualState="Pressed" />
      </zm:SetterGroup>

      <!--  Background  -->
      <zm:SetterGroup ValuePath="Background" Property="Background">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="Highlighted" VisualState="Highlighted" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter ValuePath="Pressed" VisualState="Pressed" />
      </zm:SetterGroup>

      <!--  BorderBrush  -->
      <zm:SetterGroup ValuePath="BorderBrush" Property="BorderBrush">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="Highlighted" VisualState="Highlighted" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter ValuePath="Pressed" VisualState="Pressed" />
      </zm:SetterGroup>

      <!--  Icon  -->
      <zm:SetterGroup ValuePath="Icon">

        <!--  Foreground  -->
        <zm:SetterGroup ExpandoProperty="IconForeground" ValuePath="Foreground">
          <zm:Setter ValuePath="Normal" />
          <zm:Setter ValuePath="Checked" VisualState="Checked" />
        </zm:SetterGroup>

        <!--  Background  -->
        <zm:SetterGroup ExpandoProperty="IconBackground" ValuePath="Background">
          <zm:Setter ValuePath="Normal" />
          <zm:Setter ValuePath="Checked" VisualState="Checked" />
        </zm:SetterGroup>

        <!--  BorderBrush  -->
        <zm:SetterGroup ExpandoProperty="IconBorderBrush" ValuePath="BorderBrush">
          <zm:Setter ValuePath="Normal" />
          <zm:Setter ValuePath="Checked" VisualState="Checked" />
        </zm:SetterGroup>
      </zm:SetterGroup>
    </zm:SetterGroup>

  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="MenuItemHeaderThemeStyle" BasedOn="{StaticResource MenuItemHeaderStyle}" TargetType="zm:MenuItemHeaderPresenter" />

</zm:ThemeResourceDictionary>