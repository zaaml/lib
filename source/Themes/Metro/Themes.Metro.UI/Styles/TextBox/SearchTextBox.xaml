<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="d zmb">

  <!--  Visual States  -->
  <zm:VisualStateGroupCollection x:Key="VisualStates">

    <!--  CommonStates States  -->
    <zm:VisualStateGroup Name="CommonStates">
      <zm:VisualState Name="Normal" />
      <zm:VisualState Name="ReadOnly" />
      <zm:VisualState Name="MouseOver" />
      <zm:VisualState Name="Pressed" />
      <zm:VisualState Name="Disabled" />
    </zm:VisualStateGroup>

    <!--  FocusStates States  -->
    <zm:VisualStateGroup Name="FocusStates">
      <zm:VisualState Name="Unfocused" />
      <zm:VisualState Name="Focused" />
    </zm:VisualStateGroup>

    <!--  InteractionMode States  -->
    <zm:VisualStateGroup Name="InteractionModeStates">
      <zm:VisualState Name="Edit" />
      <zm:VisualState Name="Display" />
    </zm:VisualStateGroup>

    <!--  ValidationStates States  -->
    <zm:VisualStateGroup Name="ValidationStates">
      <zm:VisualState Name="Valid" />
      <zm:VisualState Name="InvalidFocused" />
      <zm:VisualState Name="InvalidUnfocused" />
      <zm:VisualState Name="HasErrors" />
      <zm:VisualState Name="Empty" />
    </zm:VisualStateGroup>
  </zm:VisualStateGroupCollection>

  <!--  Template  -->
  <ControlTemplate x:Key="SearchTextBoxTemplate"
                   TargetType="zm:SearchTextBox">
    <zm:ControlTemplateRoot Background="Transparent"
                            VisualStateGroups="{StaticResource VisualStates}">
      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <ContentPresenter Grid.Column="0"
                            VerticalAlignment="Stretch"
                            Content="{TemplateBinding HeadContent}"
                            ContentTemplate="{TemplateBinding HeadContentTemplate}" />

          <Grid Grid.Column="1">


            <zm:AutoCompleteTextBox x:Name="AutoCompleteTextBox"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    zm:DisableVeilControl.EnableVeil="False"
                                    zm:ValidationErrorControl.EnableValidation="False"
                                    BorderThickness="0"
                                    Foreground="{TemplateBinding Foreground}"
                                    Opacity="0"
                                    ShowWatermark="{TemplateBinding ActualShowWatermark}"
                                    WatermarkIcon="{TemplateBinding WatermarkIcon}"
                                    WatermarkText="{TemplateBinding WatermarkText}">

              <zm:Extension.Triggers>
                <zm:MultiTrigger LogicalOperator="Or">
                  <zm:MultiTrigger.Conditions>
                    <zm:DataCondition Binding="{Binding Path=Visibility, ElementName=SelectedItemPresenter}" Value="Collapsed" />
                    <zm:DataCondition Binding="{zm:TemplateBinding Path=IsInEditState}" Value="True" />
                  </zm:MultiTrigger.Conditions>
                  <zm:Setter Property="Opacity" Value="1" />
                </zm:MultiTrigger>
              </zm:Extension.Triggers>
            </zm:AutoCompleteTextBox>

            <ContentPresenter x:Name="SelectedItemPresenter"
                              Margin="4,2,4,2"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectedItem}"
                              ContentTemplate="{TemplateBinding SelectedItemTemplate}"
                              IsHitTestVisible="False"
                              Visibility="Collapsed">
              <zm:Extension.Triggers>
                <zm:MultiTrigger>
                  <zm:MultiTrigger.Conditions>
                    <zm:DataCondition Binding="{zm:TemplateBinding Path=SelectedItem}" Comparer="{zm:TriggerComparer Operator=NotEqual}" Value="{x:Null}" />
                    <zm:DataCondition Binding="{zm:TemplateBinding Path=SelectedItemTemplate}" Comparer="{zm:TriggerComparer Operator=NotEqual}" Value="{x:Null}" />
                    <zm:DataCondition Binding="{zm:TemplateBinding Path=IsInEditState}" Value="False" />
                  </zm:MultiTrigger.Conditions>
                  <zm:Setter Property="Visibility" Value="Visible" />
                </zm:MultiTrigger>
              </zm:Extension.Triggers>
            </ContentPresenter>
          </Grid>

          <ContentPresenter Grid.Column="2"
                            VerticalAlignment="Stretch"
                            Content="{TemplateBinding TailContent}"
                            ContentTemplate="{TemplateBinding TailContentTemplate}" />

          <zm:PopupBar x:Name="PopupBar"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       AllowMotionAnimation="False"
                       AllowOpacityAnimation="False"
                       BorderStyle="Border"
                       PopupMaxHeight="{TemplateBinding PopupMaxHeight}"
                       PopupMaxWidth="{TemplateBinding PopupMaxWidth}"
                       PopupMinHeight="{TemplateBinding PopupMinHeight}"
                       PopupMinWidth="{TemplateBinding PopupMinWidth}">

            <zm:PopupBar.Placement>
              <zm:SnapPlacement SnapSide="Bottom"
                                Target="{zm:TemplateBinding}" />
            </zm:PopupBar.Placement>

            <zm:DockPanel>

              <ContentPresenter zm:DockPanel.Dock="Top"
                                HorizontalAlignment="Stretch"
                                Content="{TemplateBinding PopupHeader}"
                                ContentTemplate="{TemplateBinding PopupHeaderTemplate}" />

              <ListBox x:Name="DropDownListBox"
                       BorderThickness="0"
                       ItemTemplate="{TemplateBinding ItemTemplate}"
                       ItemsSource="{TemplateBinding ActualDropDownItemsSource}"
                       SelectionMode="Single" />

              <ContentPresenter zm:DockPanel.Dock="Bottom"
                                HorizontalAlignment="Stretch"
                                Content="{TemplateBinding PopupFooter}"
                                ContentTemplate="{TemplateBinding PopupFooterTemplate}" />
            </zm:DockPanel>

          </zm:PopupBar>
        </Grid>
      </Border>

      <zm:Control x:Name="DummyFocus"
                  Width="0"
                  Height="0"
                  IsHitTestVisible="False"
                  IsTabStop="False" />

      <!--  Validation Error Element  -->
      <zm:ValidationErrorControl />

      <!--  Disabled Veil  -->
      <zm:DisableVeilControl />

      <zm:Extension.Triggers>
        <zm:DataTrigger Binding="{zm:TemplateBinding Path=ItemTemplate}" Comparer="{zm:TriggerComparer Operator=Equal}" Value="{x:Null}">
          <zm:Setter TargetName="DropDownListBox" Property="DisplayMemberPath" Value="{zm:TemplateBinding Path=DisplayMember}" />
        </zm:DataTrigger>

        <zm:DataTrigger Binding="{zm:TemplateBinding Path=ItemTemplate}" Comparer="{zm:TriggerComparer Operator=NotEqual}" Value="{x:Null}">
          <zm:Setter TargetName="DropDownListBox" Property="ItemTemplate" Value="{zm:TemplateBinding Path=ItemTemplate}" />
        </zm:DataTrigger>
      </zm:Extension.Triggers>
    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Base Styles  -->
  <zm:Style x:Key="SearchTextBoxBaseStyle" TargetType="zm:SearchTextBox">
    <zm:Setter Property="VerticalContentAlignment" Value="Center" />
    <zm:Setter Property="PopupMinWidth" Value="100" />
    <zm:Setter Property="PopupMinHeight" Value="100" />
    <zm:Setter Property="BorderThickness" Value="1" />
    <zm:Setter Property="Padding" Value="3,2" />
    <zm:Setter Property="Template" Value="{StaticResource SearchTextBoxTemplate}" />
    <zm:Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />
  </zm:Style>

  <!--  Base Skinned Styles  -->
  <zm:Style x:Key="SearchTextBoxStyle" BasedOn="{StaticResource SearchTextBoxBaseStyle}" Skin="Metro.StandardControls.TextBox" TargetType="zm:SearchTextBox">
    <zm:SetterGroup ValuePathSource="Skin">

      <!--  Foreground  -->
      <zm:SetterGroup ValuePath="Foreground" Property="Foreground">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="ReadOnly" VisualState="ReadOnly" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter ValuePath="Disabled" VisualState="Disabled" />
      </zm:SetterGroup>

      <!--  Background  -->
      <zm:SetterGroup ValuePath="Background" Property="Background">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="ReadOnly" VisualState="ReadOnly" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter ValuePath="Disabled" VisualState="Disabled" />
      </zm:SetterGroup>

      <!--  BorderBrush  -->
      <zm:SetterGroup ValuePath="BorderBrush" Property="BorderBrush">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="ReadOnly" VisualState="ReadOnly" />
        <zm:Setter ValuePath="MouseOver" VisualState="MouseOver" />
        <zm:Setter ValuePath="Disabled" VisualState="Disabled" />
        <zm:Setter Priority="1" ValuePath="Focused" VisualState="Focused" />
        <zm:Setter Priority="1" ValuePath="Focused" VisualState="Edit" />
      </zm:SetterGroup>
    </zm:SetterGroup>

  </zm:Style>

  <!--  Theme Styles  -->
  <zm:ThemeStyle x:Key="SearchTextBoxThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource SearchTextBoxStyle}" TargetType="zm:SearchTextBox" />

</zm:ThemeResourceDictionary>



