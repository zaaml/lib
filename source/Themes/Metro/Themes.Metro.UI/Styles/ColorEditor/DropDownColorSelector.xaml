<zm:ThemeResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                            xmlns:zm="http://schemas.zaaml.com/xaml"
                            xmlns:zmb="http://schemas.zaaml.com/build"
                            mc:Ignorable="zmb">

  <ControlTemplate x:Key="ToggleButtonRawTemplate"
                   TargetType="zm:ToggleButton">
    <zm:ControlTemplateRoot Background="Transparent">
      <zm:ContentPresenter Content="{zm:TemplateBinding Path=Content}"
                           Margin="1,0"/>
    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Editable DropDownGlyph  -->
  <zm:PathIcon x:Key="EditTemplateDropDownGlyph"
               SharedResource="True"
               Margin="3,2"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Data="{zm:ThemeResource Key=Metro.DropDownButton.Glyph.Data}"
               Style="{zm:ThemeResource Key=Metro.DropDownButton.Glyph.Style}" />

  <!--  Template  -->
  <ControlTemplate x:Key="DropDownColorEditorControlTemplate"
                   TargetType="zm:DropDownColorSelector">
    <zm:ControlTemplateRoot Background="Transparent">

      <!--  Face  -->
      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
        <zm:DockPanel>

          <!--  DropDownButton  -->
          <zm:DropDownButton Margin="1"
                             zm:DockPanel.Dock="Right"
                             DropDownGlyph="{StaticResource EditTemplateDropDownGlyph}"
                             Focusable="false"
                             IsDropDownOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                             IsTabStop="False"
                             Placement="{TemplateBinding Placement}"
                             PlacementTarget="{zm:TemplateBinding}"
                             ShowContent="False"
                             ShowIcon="False"
                             Visibility="{zm:TemplateBinding Path=ShowDropDownButton,
                                                             Converter={zm:VisibilityConverter}}">
            <zm:DropDownButton.PopupControl>


              <!--  DropDownControl  -->
              <zm:PopupBar x:Name="PopupBar"
                           PopupHeight="{TemplateBinding PopupHeight}"
                           PopupMaxHeight="{TemplateBinding PopupMaxHeight}"
                           PopupMaxWidth="{TemplateBinding PopupMaxWidth}"
                           PopupMinHeight="{TemplateBinding PopupMinHeight}"
                           PopupMinWidth="{TemplateBinding PopupMinWidth}"
                           PopupWidth="{TemplateBinding PopupWidth}">

                <zm:ColorEditorControl x:Name="ColorEditor"
                                       BorderThickness="0" />

              </zm:PopupBar>
            </zm:DropDownButton.PopupControl>
          </zm:DropDownButton>
          
          
          
          <zm:Panel Background="{zm:TemplateSkinBinding SkinPath=Background}">
            <zm:ContentPresenter Margin="0,2"
                                 Content=" " />

            <zm:FlexPanel Orientation="Horizontal"
                          Stretch="Fill">

              <zm:ToggleButton IsChecked="{zm:TemplateBinding Path=IsDropDownOpen,
                                                              Mode=TwoWay}"
                               ClickMode="Press"
                               Template="{StaticResource ToggleButtonRawTemplate}">

                <!--  ColorPresenter  -->
                <zm:ColorPresenter MinWidth="16"
                                   MinHeight="16"
                                   Margin="{TemplateBinding Padding}"
                                   zm:DockPanel.Dock="Left"
                                   ShowTransparentPattern="{TemplateBinding ShowTransparentPattern}"
                                   Color="{zm:TemplateBinding Path=Color}" />
              </zm:ToggleButton>


              <!--  TextEditor  -->
              <zm:ColorTextEditor x:Name="TextEditor"
                                  MaxWidth="100"
                                  BorderThickness="0"
                                  IsReadOnly="{zm:TemplateBinding Path=IsTextEditable,
                                                                  Converter={zm:NegateConverter}}"
                                  Visibility="{zm:TemplateBinding Path=ShowTextValue,
                                                                  Converter={zm:VisibilityConverter}}"
                                  Value="{zm:TemplateBinding Path=Color,
                                                             Mode=TwoWay}" />
            </zm:FlexPanel>
          </zm:Panel>


        </zm:DockPanel>
      </Border>
    </zm:ControlTemplateRoot>
  </ControlTemplate>

  <!--  Base Style  -->
  <zm:Style x:Key="DropDownColorEditorControlBaseStyle" TargetType="zm:DropDownColorSelector">
    <zm:Setter Property="Padding" Value="1" />
    <zm:Setter Property="PopupMinWidth" Value="*Target" />
    <zm:Setter Property="PopupMaxHeight" Value="0.33*Screen" />

    <zm:Setter Property="BorderThickness" Value="1" />
    <zm:Setter Property="HorizontalContentAlignment" Value="Left" />
    <zm:Setter Property="VerticalContentAlignment" Value="Stretch" />
    <zm:Setter Property="PopupMinHeight" Value="100" />
    <zm:Setter Property="FocusVisualStyle" Value="{x:Null}" />

    <zm:Setter Property="Template" Value="{StaticResource DropDownColorEditorControlTemplate}" />
  </zm:Style>

  <!--  Style  -->
  <zm:Style x:Key="DropDownColorEditorControlStyle" BasedOn="{StaticResource DropDownColorEditorControlBaseStyle}" Skin="Metro.DropDownColorSelector" TargetType="zm:DropDownColorSelector">

    <zm:SetterGroup ValuePathSource="Skin">

      <!--  Background  -->
      <zm:SetterGroup ValuePath="Background" Property="Background">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="ReadOnly" VisualStateTrigger="ReadOnly" />
        <zm:Setter ValuePath="MouseOver" VisualStateTrigger="MouseOver" />
        <zm:Setter ValuePath="Disabled" VisualStateTrigger="Disabled" />
        <zm:Setter Priority="1" ValuePath="Focused" VisualStateTrigger="Focused" />
      </zm:SetterGroup>

      <!--  BorderBrush  -->
      <zm:SetterGroup ValuePath="BorderBrush" Property="BorderBrush">
        <zm:Setter ValuePath="Normal" />
        <zm:Setter ValuePath="ReadOnly" VisualStateTrigger="ReadOnly" />
        <zm:Setter ValuePath="MouseOver" VisualStateTrigger="MouseOver" />
        <zm:Setter ValuePath="Disabled" VisualStateTrigger="Disabled" />
        <zm:Setter Priority="1" ValuePath="Focused" VisualStateTrigger="Focused" />
      </zm:SetterGroup>
    </zm:SetterGroup>

  </zm:Style>

  <!--  Theme Style  -->
  <zm:ThemeStyle x:Key="DropDownColorEditorControlThemeStyle" zmb:Deferred="True" BasedOn="{StaticResource DropDownColorEditorControlStyle}" TargetType="zm:DropDownColorSelector" />

</zm:ThemeResourceDictionary>