trigger:
- develop

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'source\Lib.sln'
  buildConfiguration: 'Release'

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build
    steps:
    - checkout: self
      fetchDepth: 0
      fetchTags: true

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '-c $(buildConfiguration) -p:Publish=true'
        projects: $(solution)

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/artifacts'
        contents: '*.nupkg'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'Packages'

- stage: test
  dependsOn: build
  displayName: Test
  jobs:
  - job: test
    steps:
    - checkout: self
      fetchDepth: 0
      fetchTags: true

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        arguments: '-c $(testConfiguration)'    
        projects: $(testSolution)
        
- stage: deploy
  dependsOn: test
  displayName: Deploy
  jobs:
  - job: deploy
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'Packages'
        itemPattern: '**'
        targetPath: '$(Pipeline.Workspace)'
    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'lib/ci-alpha'